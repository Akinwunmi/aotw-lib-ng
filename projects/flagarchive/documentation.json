{
    "pipes": [
        {
            "name": "RangePipe",
            "id": "pipe-RangePipe-d2a182217b2fc900c8bda6fe873d7ff4653f34a695b8ea4863e3e2d26c6e5f9378ac0fe689aed0681b4c248dc0cd0baa318769296989ae6cbbb4c4bd9f04e8d7",
            "file": "projects/flagarchive/src/pipes/range.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "range",
                            "type": "[number, number]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "range",
                            "type": "[number, number]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "range",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'range',\n  standalone: true\n})\nexport class RangePipe implements PipeTransform {\n\n  public transform(range: [number, number]): number[] {\n    if (!range) {\n      return [];\n    }\n\n    return Array(range[1] - range[0] + 1).fill(0).map((_, i) => {\n      return range[0] + i;\n    });\n  }\n\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "BreadcrumbArgs",
            "id": "interface-BreadcrumbArgs-3104c046251369f85f090bf03d14a7576219fb4bf05d7f5badd1bb6b94b5d02e5baabfc29d36323ff3c5b6d336eb40a64046ef5171b3db9ac19745c36caa58bb",
            "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\n\nimport { BreadcrumbItem, FlagBreadcrumbComponent } from '../../components';\n\ninterface BreadcrumbArgs {\n  items: BreadcrumbItem[];\n}\n\nconst args: BreadcrumbArgs = {\n  items: [\n    { title: 'Home', link: '/' },\n    { title: 'Category', link: '/category' },\n    { title: 'Subcategory', link: '/subcategory' },\n  ],\n};\n\nconst meta: Meta<BreadcrumbArgs> = {\n  title: 'Components/Breadcrumb',\n  component: FlagBreadcrumbComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagBreadcrumbComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n};\n\nexport default meta;\ntype Story = StoryObj<BreadcrumbArgs>;\n\nexport const Default: Story = { args };\n",
            "properties": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreadcrumbItem[]",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "BreadcrumbItem",
            "id": "interface-BreadcrumbItem-746e13cf8ccdafd53121f2efffc8183d2f8c227dd65ccaae0a553d8c61edeed7d8a3293ac27f449cec6629b403e2fdef714e70b3963a55b45f600b6891380086",
            "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BreadcrumbItem {\n  title: string;\n  link?: string;\n}\n",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "FormFieldArgs",
            "id": "interface-FormFieldArgs-c20e491d96aec23b29cbf830a436f6441cc4aabdcb963c0dd8953edd3f06fca539fe21fd2eec9dbecc7256fc4cc60dce931fb873840bab376aed8359a20a3c04",
            "file": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface FormFieldArgs {\n  disabled?: boolean;\n  errorMessage?: string;\n  infoMessage?: string;\n  label?: string;\n  placeholder?: string;\n  readonly?: boolean;\n  required?: boolean;\n}\n\nexport const FORM_FIELD_ARGS: FormFieldArgs = {\n  disabled: false,\n  errorMessage: 'Please enter a location or organization',\n  infoMessage: 'An entity that is either a location or an organization',\n  label: 'Location / Organization',\n  placeholder: 'Enter location or organization',\n  readonly: false,\n  required: true,\n};\n\nexport function setLabel(label?: string, required?: boolean): string {\n  return label ? `<label flagLabel ${required && 'required'}>${label}</label>` : '';\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "infoMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "placeholder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "readonly",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "ListItemArgs",
            "id": "interface-ListItemArgs-d8f3004785e5c98f3cdbf95ac25066297ce8b39a149c86dfffa6af3261b3b98d25911792a54224cfb27e8f2c8a8948ef89405f647d7969c2bd5237701eec222a",
            "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\n\nimport { FlagIconComponent, FlagListItemComponent } from '../../components';\n\ninterface ListItemArgs {\n  active?: boolean;\n  disabled?: boolean;\n  interactive?: boolean;\n  label: string;\n  prefix: string;\n  suffix: string;\n}\n\nconst args: ListItemArgs = {\n  active: false,\n  disabled: false,\n  interactive: true,\n  label: 'List Item',\n  prefix: '',\n  suffix: '',\n};\n\nconst meta: Meta<ListItemArgs> = {\n  title: 'Components/List Item',\n  component: FlagListItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagListItemComponent],\n    }),\n  ],\n  render: ({ label, prefix, suffix, ...args }) => ({\n    props: args,\n    template: `\n      <flag-list-item [active]=\"active\" [disabled]=\"disabled\" [interactive]=\"interactive\">\n        ${prefix && `<flag-icon style=\"font-size: var(--flag-size-sm);\">${prefix}</flag-icon>`}\n        ${label}\n        ${suffix && `<flag-icon style=\"font-size: var(--flag-size-sm);\">${suffix}</flag-icon>`}\n      </flag-list-item>\n    `,\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Chip',\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<ListItemArgs>;\n\nexport const Default: Story = { args };\n\nexport const Active: Story = {\n  args: {\n    ...args,\n    active: true,\n  },\n};\n\nexport const WithAffixes: Story = {\n  args: {\n    ...args,\n    prefix: 'star',\n    suffix: 'keyboard_arrow_right',\n  },\n};\n\nexport const NotInteractive: Story = {\n  args: {\n    ...args,\n    interactive: false,\n  },\n};\n\nexport const Disabled: Story = {\n  args: {\n    ...args,\n    disabled: true,\n  },\n};\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "interactive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "suffix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "PillArgs",
            "id": "interface-PillArgs-5a9a5ee57e018eab5d228ce1b27ebe18c99a1fbe55c2691f36b221024471099a76aea6da3b467b05532528489bb269cb85f483235125ef24351cd4bfd5eb822c",
            "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\n\nimport { FlagPillComponent, PillTheme, PillType } from '../../components';\n\ninterface PillArgs {\n  label: string;\n  theme: PillTheme;\n  type: PillType;\n}\n\nconst args: PillArgs = {\n  label: 'Beta',\n  theme: PillTheme.Light,\n  type: PillType.Primary,\n};\n\nconst meta: Meta<PillArgs> = {\n  title: 'Components/Pill',\n  component: FlagPillComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagPillComponent],\n    }),\n  ],\n  render: ({ label, ...args }) => ({\n    props: args,\n    template: `\n      <flag-pill [theme]=\"theme\" [type]=\"type\">\n        ${label}\n      </flag-pill>\n    `,\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Beta',\n    },\n    theme: {\n      control: 'select',\n      options: Object.values(PillTheme),\n      defaultValue: PillTheme.Light,\n    },\n    type: {\n      control: 'select',\n      options: Object.values(PillType),\n      defaultValue: PillType.Primary,\n    },\n  },\n};\n\nexport default meta;\ntype Story = StoryObj<PillArgs>;\n\nexport const Default: Story = { args };\n",
            "properties": [
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "theme",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PillTheme",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PillType",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Step",
            "id": "interface-Step-c140b87475c6bd3a9f8d5ce614abc4497ba0bf0b2cec17b31fc1d636dcabb11f0056b5c0c97660ea26409cd4245142b56dc8b5a53dfe73693520c5116e2c698d",
            "file": "projects/flagarchive/src/components/stepper/stepper.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Step {\n\tlabel: string;\n\tdisabled: boolean;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "StepperArgs",
            "id": "interface-StepperArgs-5ca793da03da5ca82327f20eef0cae781bb9e5a1d089e3440affca9cbd602574286090300f1ed8172f60babd3bf0ec28d3a16f6d32b9db809999dd32fb1c6d6a",
            "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { moduleMetadata, Meta, StoryObj } from '@storybook/angular';\n\nimport { FlagStepperComponent, Step } from '../../components';\n\ninterface StepperArgs {\n  activeStep?: number;\n  steps: Step[];\n}\n\nconst args: StepperArgs = {\n  activeStep: 0,\n  steps: [\n    { disabled: false, label: 'Step 1' },\n    { disabled: false, label: 'Step 2' },\n    { disabled: true, label: 'Step 3' },\n  ],\n};\n\nconst meta: Meta<StepperArgs> = {\n  title: 'Components/Stepper (deprecated)',\n  component: FlagStepperComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagStepperComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n};\n\nexport default meta;\ntype Story = StoryObj<StepperArgs>;\n\nexport const Default: Story = { args };\n",
            "properties": [
                {
                    "name": "activeStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "steps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Step[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "StoryArgs",
            "id": "interface-StoryArgs-e1573ff68667b3f5256c8f4090ac8160198a01c59b18c26aed7cd62af189bfd80205f414d1b39e189d22a1cf7ca217bf175bc9ae9f54047db38ccc113b29f623",
            "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { moduleMetadata, type Meta, type StoryObj } from '@storybook/angular';\n\nimport { FlagIconComponent } from '../../components';\nimport { FlagButtonDirective } from '../../directives';\n\ninterface StoryArgs {\n  disabled?: boolean;\n  ghost?: boolean;\n  icon?: string;\n  raised?: boolean;\n  rounded?: boolean;\n  secondary?: boolean;\n  text?: string;\n};\n\nconst args: StoryArgs = {\n  disabled: false,\n  ghost: false,\n  icon: 'keyboard_arrow_left',\n  raised: true,\n  rounded: false,\n  secondary: false,\n  text: 'Button',\n};\n\nconst meta: Meta<StoryArgs> = {\n  tags: ['autodocs'],\n  title: 'Core/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [FlagButtonDirective, FlagIconComponent],\n    }),\n  ],\n  render: (props) => ({\n    props,\n    template: `\n      <button\n        flagButton\n        type=\"button\"\n        [attr.ghost]=${props.ghost || undefined}\n        [attr.raised]=${props.raised || undefined}\n        [attr.rounded]=${props.rounded || undefined}\n        [attr.secondary]=${props.secondary || undefined}\n        [disabled]=${props.disabled || undefined}\n      >\n        ${props.icon && `<flag-icon>${props.icon}</flag-icon>`}\n        ${props.text}\n      </button>\n    `,\n  }),\n};\nexport default meta;\ntype Story = StoryObj<StoryArgs>;\n\nexport const Primary: Story = {\n  args,\n};\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ghost",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "raised",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "rounded",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "secondary",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tab",
            "id": "interface-Tab-d1f59de95968e06c6f7439e6578da568edc52588ad0fe23faf780696456a9562aee44f0ecd2e9f6e718e381ccf2449f80b908006612f6a4e0aa782559667c4ba",
            "file": "projects/flagarchive/src/components/tab/tab.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tab {\n  id: number;\n  name: string;\n  label: string;\n  disabled: boolean;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "TabGroupArgs",
            "id": "interface-TabGroupArgs-b0c3b537c0cd921474ebcb7acdceab5096ef71c550822a7cf847abf3f12bf143add259253b62bdb58d3c66bf2ae98c3cc4d61e041a3759157085f824df01a8d7",
            "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Meta, StoryObj, moduleMetadata } from '@storybook/angular';\n\nimport {\n  FlagIconComponent,\n  FlagTabGroupComponent,\n  Tab,\n} from '../../components';\n\ninterface TabGroupArgs {\n  active?: number;\n  tabs: Tab[];\n}\n\nconst args: TabGroupArgs = {\n  active: 0,\n  tabs: [\n    { id: 0, disabled: false, label: 'Tab 1', name: 'Tab 1' },\n    { id: 1, disabled: false, label: 'Tab 2', name: 'Tab 2' },\n    { id: 2, disabled: true, label: 'Tab 3', name: 'Tab 3' },\n    { id: 3, disabled: false, label: 'Tab 4', name: 'Tab 4' },\n  ],\n};\n\nconst meta: Meta<TabGroupArgs> = {\n  title: 'Components/Tab Group',\n  component: FlagTabGroupComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagTabGroupComponent, FlagIconComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n};\n\nexport default meta;\ntype Story = StoryObj<TabGroupArgs>;\n\nexport const Default: Story = { args };\n",
            "properties": [
                {
                    "name": "active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "tabs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Tab[]",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "YearPickerArgs",
            "id": "interface-YearPickerArgs-8c2733b00f34f69520f8708a53368b7e4d887b98e86e72b160698cb4550f4bf8d489c7396fc1c2dd62669df667858f17d1665bfb42b2bd2ce4a10dcc5e158b85",
            "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\n  Meta,\n  StoryObj,\n  componentWrapperDecorator,\n  moduleMetadata,\n} from '@storybook/angular';\n\nimport { FlagIconComponent, FlagYearPickerComponent } from '../../components';\n\ninterface YearPickerArgs {\n  min: number;\n  max: number;\n  rangeSize: number;\n  selected: number;\n}\n\nconst args: YearPickerArgs = {\n  min: 1799,\n  max: 2024,\n  rangeSize: 9,\n  selected: 2024,\n};\n\nconst meta: Meta<YearPickerArgs> = {\n  title: 'Components/Year Picker (beta)',\n  component: FlagYearPickerComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"max-width: 20rem\">${story}</div>`,\n    ),\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagYearPickerComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n};\n\nexport default meta;\ntype Story = StoryObj<YearPickerArgs>;\n\nexport const Default: Story = { args };\n",
            "properties": [
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "rangeSize",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "FlagStepperService",
            "id": "injectable-FlagStepperService-3e16dcaa40cdef6c41203b76d12f8773e02304ec441728b04381c93dd486c2a5c2922e3bac5d56413b31a2d836ac8759852cfb00c56cd83275a2cb35d5c8244f",
            "file": "projects/flagarchive/src/components/stepper/stepper.service.ts",
            "properties": [
                {
                    "name": "steps$",
                    "defaultValue": "new Subject<Step[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setSteps",
                    "args": [
                        {
                            "name": "steps",
                            "type": "Step[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "steps",
                            "type": "Step[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Step } from './stepper.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlagStepperService {\n  public steps$ = new Subject<Step[]>();\n\n  public setSteps(steps: Step[]): void {\n    return this.steps$.next(steps);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "FlagButtonDirective",
            "id": "directive-FlagButtonDirective-acf6bd39d6d0164a9265bb8d0137af88d0f1def3ee49ea5d9028ea15d2d630b2191a63de71e2e6f3e5d078b89c51526649f9f344cb1b2bb5455cfc554dd4f615",
            "file": "projects/flagarchive/src/directives/button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, inject, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[flagButton]',\n  standalone: true\n})\nexport class FlagButtonDirective implements OnInit {\n  private elementRef = inject(ElementRef);\n\n  public get element(): HTMLButtonElement {\n    return this.elementRef.nativeElement as HTMLButtonElement;\n  }\n\n  public ngOnInit(): void {\n    if (this.element.childNodes.length !== 1) {\n      return;\n    }\n\n    const node = this.element.childNodes[0];\n    const isFlagIcon = node.nodeName === 'FLAG-ICON';\n    this.element.toggleAttribute('icon-only', isFlagIcon);\n\n    if (isFlagIcon) {\n      (node as HTMLElement).style.width = 'var(--flag-size-sm)';\n    }\n  }\n}\n",
            "selector": "[flagButton]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "element": {
                    "name": "element",
                    "getSignature": {
                        "name": "element",
                        "type": "",
                        "returnType": "HTMLButtonElement",
                        "line": 10
                    }
                }
            }
        },
        {
            "name": "FlagDropdownDirective",
            "id": "directive-FlagDropdownDirective-8e486da03b0407185878dfbda8f6dd9944661223a3877d641a6cdc0a92725f846ace86a01bdd3d4e7339a78f362816be7f5d25314ad35734baad04af60975be8",
            "file": "projects/flagarchive/src/directives/dropdown.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  DestroyRef,\n  Directive,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  model,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { EMPTY, merge, Observable } from 'rxjs';\n\n@Directive({\n  selector: '[flagDropdownTrigger]',\n  standalone: true,\n})\nexport class FlagDropdownDirective implements OnDestroy {\n  contentRef = input.required<TemplateRef<unknown>>({\n    alias: 'flagDropdownTrigger',\n  });\n\n  isOpen = model(false);\n\n  @HostListener('click')\n  handleClick() {\n    this.isOpen.set(!this.isOpen());\n    this.#toggle();\n  }\n\n  #destroyRef = inject(DestroyRef);\n  #elementRef = inject(ElementRef<HTMLElement>);\n  #overlay = inject(Overlay);\n  #viewContainerRef = inject(ViewContainerRef);\n\n  #overlayRef?: OverlayRef;\n\n  ngOnDestroy() {\n    this.isOpen.set(false);\n    this.#overlayRef?.dispose();\n  }\n\n  close() {\n    this.isOpen.set(false);\n    this.#overlayRef?.detach();\n  }\n\n  open() {\n    const xStart: Pick<ConnectedPosition, 'originX' | 'overlayX'> = {\n      originX: 'start',\n      overlayX: 'start',\n    };\n    const xEnd: Pick<ConnectedPosition, 'originX' | 'overlayX'> = {\n      originX: 'end',\n      overlayX: 'end',\n    };\n    const yTop: Pick<ConnectedPosition, 'originY' | 'overlayY'> = {\n      originY: 'top',\n      overlayY: 'bottom',\n    };\n    const yBottom: Pick<ConnectedPosition, 'originY' | 'overlayY'> = {\n      originY: 'bottom',\n      overlayY: 'top',\n    };\n    const positions: ConnectedPosition[] = [\n      { ...xStart, ...yBottom, offsetY: 4 },\n      { ...xEnd, ...yBottom, offsetY: 4 },\n      { ...xStart, ...yTop, offsetY: -4 },\n      { ...xEnd, ...yTop, offsetY: -4 },\n    ];\n    const templatePortal = new TemplatePortal(this.contentRef(), this.#viewContainerRef);\n\n    this.#overlayRef = this.#overlay.create({\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this.#overlay.scrollStrategies.reposition(),\n      positionStrategy: this.#overlay\n        .position()\n        .flexibleConnectedTo(this.#elementRef)\n        .withPositions(positions),\n    });\n    this.#overlayRef.attach(templatePortal);\n\n    this.#actions()\n      .pipe(takeUntilDestroyed(this.#destroyRef))\n      .subscribe(() => {\n        this.isOpen.set(false);\n        this.#toggle();\n      });\n  }\n\n  #actions(): Observable<MouseEvent | void> {\n    if (!this.#overlayRef) {\n      return EMPTY;\n    }\n\n    const backdropClick$ = this.#overlayRef.backdropClick();\n    const detachments$ = this.#overlayRef.detachments();\n\n    return merge(backdropClick$, detachments$);\n  }\n\n  #toggle() {\n    if (this.isOpen()) {\n      this.open();\n    } else {\n      this.close();\n    }\n  }\n}\n",
            "selector": "[flagDropdownTrigger]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30
                }
            ],
            "propertiesClass": [
                {
                    "name": "#destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#elementRef",
                    "defaultValue": "inject(ElementRef<HTMLElement>)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#overlay",
                    "defaultValue": "inject(Overlay)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#overlayRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayRef",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#viewContainerRef",
                    "defaultValue": "inject(ViewContainerRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "contentRef",
                    "defaultValue": "input.required<TemplateRef<unknown>>({\n    alias: 'flagDropdownTrigger',\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "#actions",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<MouseEvent | void>",
                    "typeParameters": [],
                    "line": 96,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 107,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "handleClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "extends": [],
            "implements": [
                "OnDestroy"
            ]
        }
    ],
    "components": [
        {
            "name": "FlagBreadcrumbComponent",
            "id": "component-FlagBreadcrumbComponent-20473c0c8612bb6a9883aa7d61e51595733a3fba2af99f84b7684fccc31b98b7a9a7016a387d9293668532ed4f78e21fcceda19c22094fcfd78397ccf9ee46a4",
            "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "input.required<BreadcrumbItem[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "selectItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "BreadcrumbItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BreadcrumbItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FlagIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, output } from '@angular/core';\n\nimport { FlagIconComponent } from '../icon';\n\nimport { BreadcrumbItem } from './breadcrumb.model';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [FlagIconComponent],\n  selector: 'flag-breadcrumb',\n  standalone: true,\n  styleUrl: './breadcrumb.component.css',\n  templateUrl: './breadcrumb.component.html',\n})\nexport class FlagBreadcrumbComponent {\n  public items = input.required<BreadcrumbItem[]>();\n\n  public selectedItem = output<BreadcrumbItem>();\n\n  public selectItem(item: BreadcrumbItem): void {\n    this.selectedItem.emit(item);\n  }\n}\n",
            "styleUrl": "./breadcrumb.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@for (item of items(); track $index) {\n  <button\n    flagButton\n    ghost\n    tabindex=\"0\"\n    (click)=\"selectItem(item)\"\n    (keyup)=\"selectItem(item)\"\n  >\n    {{ item.title }}\n  </button>\n  <flag-icon>keyboard_arrow_right</flag-icon>\n}\n"
        },
        {
            "name": "FlagCardComponent",
            "id": "component-FlagCardComponent-5511a60eb2b198dac9629a926d6465e1d2c2f8e6735abf4d7c0e310561016441a18eff808e588ac631f2e5dd08b510a340add38a4c4cf995b4b78022426b1ef9",
            "file": "projects/flagarchive/src/components/card/card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-card',\n  standalone: true,\n  styleUrl: './card.component.css',\n  templateUrl: './card.component.html',\n})\nexport class FlagCardComponent {}\n",
            "styleUrl": "./card.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagCheckboxComponent",
            "id": "component-FlagCheckboxComponent-57c9463ae025603e0d43fbd43ee27303926bd0c37b81f0ff6620901268b82d23bb7adea55b968e5b8d261a6a0c4f5ccc67e2b2ddc2e73e279ec7a34f27cb179b",
            "file": "projects/flagarchive/src/components/checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: FlagCheckboxComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "flag-checkbox",
            "styleUrls": [
                "../form-field/checkable-input.css",
                "./checkbox.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./checkbox.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "required": false
                },
                {
                    "name": "indeterminate",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "required": false
                },
                {
                    "name": "name",
                    "defaultValue": "model('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "uuid",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 62,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.indeterminate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51
                }
            ],
            "standalone": true,
            "imports": [
                {
                    "name": "FlagIconComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  HostListener,\n  model,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { FlagIconComponent } from '../icon';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [FlagIconComponent],\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FlagCheckboxComponent,\n    },\n  ],\n  selector: 'flag-checkbox',\n  standalone: true,\n  styleUrls: ['../form-field/checkable-input.css', './checkbox.component.css'],\n  templateUrl: './checkbox.component.html',\n})\nexport class FlagCheckboxComponent implements ControlValueAccessor {\n  checked = model(false);\n  disabled = model(false);\n  indeterminate = model(false);\n  name = model('');\n\n  uuid = crypto.randomUUID();\n\n  @HostBinding('class.checked')\n  get checkedClass(): boolean {\n    return this.checked();\n  }\n\n  @HostBinding('class.disabled')\n  get disabledClass(): boolean {\n    return this.disabled();\n  }\n\n  @HostBinding('class.indeterminate')\n  get indeterminateClass(): boolean {\n    return this.indeterminate();\n  }\n\n  @HostListener('click')\n  onClick() {\n    if (!this.checked()) {\n      this.indeterminate.set(false);\n    }\n    this.checked.set(!this.checked());\n  }\n\n  registerOnChange(fn: (value: boolean) => void) {\n    this.checked.subscribe(fn);\n  }\n\n  registerOnTouched() {\n    // noop\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled.set(disabled);\n  }\n\n  writeValue(value: boolean) {\n    this.checked.set(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  align-items: center;\n  color: var(--flag-color-primary);\n  cursor: pointer;\n  display: grid;\n  font-family: var(--flag-font-family-primary);\n  font-size: var(--flag-font-size-sm);\n  gap: var(--flag-space-sm);\n  grid-template-columns: 1.25rem 1fr;\n  transition: color var(--flag-animation-speed-default);\n  width: fit-content;\n\n  input {\n    display: none;\n  }\n\n  div {\n    aspect-ratio: 1;\n    background-color: var(--flag-color-white);\n    border: var(--flag-border-width-xs) solid var(--flag-color-grey-400);\n    position: relative;\n    transition: (\n      background-color var(--flag-animation-speed-default),\n      border-color var(--flag-animation-speed-default)\n    );\n  }\n  \n  label {\n    cursor: pointer;\n    pointer-events: none;\n  }\n  \n  &.checked {\n    div {\n      border-color: var(--flag-color-primary);\n    }\n  }\n\n  &:hover {\n    color: var(--flag-color-primary-700);\n\n    &.checked {\n      div {\n        border-color: var(--flag-color-primary-700);\n      }\n    }\n  }\n\n  &:active {\n    color: var(--flag-color-primary-600);\n\n    &.checked {\n      div {\n        border-color: var(--flag-color-primary-600);\n      }\n    }\n  }\n\n  &.disabled {\n    color: var(--flag-color-grey-500);\n    pointer-events: none;\n    user-select: none;\n\n    div {\n      background-color: var(--flag-color-grey-200);\n      border-color: var(--flag-color-grey-400);\n    }\n  }\n}\n",
                    "styleUrl": "../form-field/checkable-input.css"
                },
                {
                    "data": ":host {\n  div {\n    border-radius: var(--flag-radius-sm);\n\n    flag-icon {\n      color: var(--flag-color-white);\n      font-size: var(--flag-font-size-md);\n      margin: calc(var(--flag-border-width-xs) * -1);\n      opacity: 0;\n      position: absolute;\n      transition: opacity var(--flag-animation-speed-default);\n    }\n  }\n\n  &.checked {\n    div {\n      background-color: var(--flag-color-primary);\n  \n      flag-icon {\n        opacity: 1;\n      }\n    }\n  }\n  \n  &.indeterminate {\n    div {\n      background-color: var(--flag-color-primary);\n      border-color: var(--flag-color-primary);\n\n      flag-icon {\n        opacity: 1;\n      }\n    }\n  }\n  \n  &:hover {\n    &.checked {\n      div {\n        background-color: var(--flag-color-primary-700);\n      }\n    }\n    \n    &.indeterminate {\n      div {\n        background-color: var(--flag-color-primary-700);\n        border-color: var(--flag-color-primary-700);\n      }\n    }\n  }\n  \n  &:active {\n    &.indeterminate {\n      div {\n        border-color: var(--flag-color-primary-600);\n      }\n    }\n  }\n  \n  &.disabled {\n    div {\n      flag-icon {\n        color: var(--flag-color-grey-200);\n      }\n    }\n\n    &.checked {\n      div {\n        background-color: var(--flag-color-grey-400);\n      }\n    }\n\n    &.indeterminate {\n      div {\n        background-color: var(--flag-color-grey-400);\n        border-color: var(--flag-color-grey-400);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./checkbox.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "checkedClass": {
                    "name": "checkedClass",
                    "getSignature": {
                        "name": "checkedClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 36
                    }
                },
                "disabledClass": {
                    "name": "disabledClass",
                    "getSignature": {
                        "name": "disabledClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 41
                    }
                },
                "indeterminateClass": {
                    "name": "indeterminateClass",
                    "getSignature": {
                        "name": "indeterminateClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 46
                    }
                }
            },
            "templateData": "<input type=\"checkbox\" [checked]=\"checked()\" [id]=\"uuid\" [name]=\"name()\">\n<div\n  role=\"checkbox\"\n  [attr.aria-checked]=\"checked()\"\n  [attr.aria-disabled]=\"disabled()\"\n  [tabindex]=\"disabled() ? -1 : 0\"\n>\n  <flag-icon>{{ indeterminate() ? 'remove' : 'check' }}</flag-icon>\n</div>\n<label tabindex=\"-1\" [for]=\"uuid\">\n  <ng-content />\n</label>\n"
        },
        {
            "name": "FlagCheckboxGroupComponent",
            "id": "component-FlagCheckboxGroupComponent-7d9535ab205ff703d5810f1abdd8d4968b0975c7ff85fda92d583a23767e14f83e11ea815965cc3ce3b1a77758e09aabed4e0057c27f7e3de0031d084193472d",
            "file": "projects/flagarchive/src/components/checkbox-group/checkbox-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-checkbox-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./checkbox-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-checkbox-group',\n  standalone: true,\n  styleUrl: './checkbox-group.component.css',\n  templateUrl: './checkbox-group.component.html',\n})\nexport class FlagCheckboxGroupComponent {}\n",
            "styleUrl": "./checkbox-group.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagFormFieldComponent",
            "id": "component-FlagFormFieldComponent-5d0f491ed4d457ef9baaa7c66eaec8111f5ca0bb17b16a15bf1bccd415b9e0bc722d476e20a8f547684570a06713a26ac6ae10c9c637a939ac052d5dc4a6080a",
            "file": "projects/flagarchive/src/components/form-field/form-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-form-field",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "infoMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "infoMessage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-form-field',\n  standalone: true,\n  styleUrl: './form-field.component.css',\n  templateUrl: './form-field.component.html',\n})\nexport class FlagFormFieldComponent {\n  public errorMessage = input<string>();\n  public infoMessage = input<string>();\n}\n",
            "styleUrl": "./form-field.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content />\n@if (infoMessage()) {\n  <p>{{ infoMessage() }}</p>\n}\n@if (errorMessage()) {\n  <p class=\"error\">{{ errorMessage() }}</p>\n}\n"
        },
        {
            "name": "FlagIconComponent",
            "id": "component-FlagIconComponent-fbd0942a843d7f5b35311013a82d355afda27995f1872d9cc778d50775bafe4541594b00a9faec5822712a81c66ba2e38be8dd8c822ffcead6c3e768aceceea7",
            "file": "projects/flagarchive/src/components/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        123,
                        148
                    ]
                },
                {
                    "name": "iconClass",
                    "defaultValue": "'material-symbols-rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        124
                    ]
                },
                {
                    "name": "renderer",
                    "defaultValue": "inject(Renderer2)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123,
                        148
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'material-symbols-rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  HostBinding,\n  inject,\n  OnInit,\n  Renderer2,\n} from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-icon',\n  standalone: true,\n  styleUrl: './icon.component.css',\n  templateUrl: './icon.component.html',\n})\nexport class FlagIconComponent implements OnInit {\n  private readonly elementRef = inject(ElementRef);\n  private readonly renderer = inject(Renderer2);\n\n  @HostBinding('class')\n  protected iconClass = 'material-symbols-rounded';\n\n  public ngOnInit(): void {\n    const height = getComputedStyle(this.elementRef.nativeElement).fontSize;\n    this.renderer.setStyle(this.elementRef.nativeElement, 'width', height);\n  }\n}\n",
            "styleUrl": "./icon.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagListItemComponent",
            "id": "component-FlagListItemComponent-746a878c8fc534b9b66e94c0ba4fe9caa946b4b04861829866a4d6d6931813e4c08a1a8832617c3b0e846597774dde8cf5eaf9d2b48c49332b867afd1a0ce364",
            "file": "projects/flagarchive/src/components/list-item/list-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "interactive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "interactive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.interactive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, input } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-list-item',\n  standalone: true,\n  styleUrl: './list-item.component.css',\n  templateUrl: './list-item.component.html',\n})\nexport class FlagListItemComponent {\n  public active = input(false);\n  public disabled = input(false);\n  public interactive = input(true);\n\n  @HostBinding('class.active')\n  protected get activeClass(): boolean {\n    return this.active();\n  }\n\n  @HostBinding('class.disabled')\n  protected get disabledClass(): boolean {\n    return this.disabled();\n  }\n\n  @HostBinding('class.interactive')\n  protected get interactiveClass(): boolean {\n    return this.interactive();\n  }\n}\n",
            "styleUrl": "./list-item.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "activeClass": {
                    "name": "activeClass",
                    "getSignature": {
                        "name": "activeClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 16
                    }
                },
                "disabledClass": {
                    "name": "disabledClass",
                    "getSignature": {
                        "name": "disabledClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 21
                    }
                },
                "interactiveClass": {
                    "name": "interactiveClass",
                    "getSignature": {
                        "name": "interactiveClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 26
                    }
                }
            },
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagPillComponent",
            "id": "component-FlagPillComponent-51fb0de963c953d0916bb07028914d5e41f39a9a4a827febf01cca1ccfbe0a16ab0857f31b87258de6fdfd4fd077ac966e4b1208654bd0ca4f27105eb75edc15",
            "file": "projects/flagarchive/src/components/pill/pill.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-pill",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./pill.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "theme",
                    "defaultValue": "input(PillTheme.Light)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "type",
                    "defaultValue": "input(PillType.Primary)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, input } from '@angular/core';\n\nimport { PillTheme, PillType } from './pill.model';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-pill',\n  standalone: true,\n  styleUrl: './pill.component.css',\n  templateUrl: './pill.component.html',\n})\nexport class FlagPillComponent {\n  public theme = input(PillTheme.Light);\n  public type = input(PillType.Primary);\n\n  @HostBinding('class')\n  public get class(): string {\n    return `${this.theme()} ${this.type()}`;\n  }\n}\n",
            "styleUrl": "./pill.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "class": {
                    "name": "class",
                    "getSignature": {
                        "name": "class",
                        "type": "string",
                        "returnType": "string",
                        "line": 17
                    }
                }
            },
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagRadioButtonComponent",
            "id": "component-FlagRadioButtonComponent-bafa1c3c02a6b247898be26308dbe8768aa1b13efa6de7ccf8548bda1168754146542a0f3b51e17056815c710c0ab9bd7d615629099464e62fe4fa954703810d",
            "file": "projects/flagarchive/src/components/radio-button/radio-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    multi: true, provide: NG_VALUE_ACCESSOR, useExisting: FlagRadioButtonComponent,\n}",
                    "type": "component"
                }
            ],
            "selector": "flag-radio-button",
            "styleUrls": [
                "../form-field/checkable-input.css",
                "./radio-button.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./radio-button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "required": false
                },
                {
                    "name": "name",
                    "defaultValue": "model('')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "uuid",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [
                {
                    "name": "onClick",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "boolean",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "disabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.checked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42
                }
            ],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  HostListener,\n  model,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      multi: true,\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FlagRadioButtonComponent,\n    },\n  ],\n  selector: 'flag-radio-button',\n  standalone: true,\n  styleUrls: ['../form-field/checkable-input.css', './radio-button.component.css'],\n  templateUrl: './radio-button.component.html',\n})\nexport class FlagRadioButtonComponent implements ControlValueAccessor {\n  checked = model(false);\n  disabled = model(false);\n  name = model('');\n\n  uuid = crypto.randomUUID();\n\n  @HostBinding('class.checked')\n  get checkedClass(): boolean {\n    return this.checked();\n  }\n\n  @HostBinding('class.disabled')\n  get disabledClass(): boolean {\n    return this.disabled();\n  }\n\n  @HostListener('click')\n  onClick() {\n    this.checked.set(true);\n  }\n\n  registerOnChange(fn: (value: boolean) => void) {\n    this.checked.subscribe(fn);\n  }\n\n  registerOnTouched() {\n    // noop\n  }\n\n  setDisabledState(disabled: boolean) {\n    this.disabled.set(disabled);\n  }\n\n  writeValue(value: boolean) {\n    this.checked.set(value);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  align-items: center;\n  color: var(--flag-color-primary);\n  cursor: pointer;\n  display: grid;\n  font-family: var(--flag-font-family-primary);\n  font-size: var(--flag-font-size-sm);\n  gap: var(--flag-space-sm);\n  grid-template-columns: 1.25rem 1fr;\n  transition: color var(--flag-animation-speed-default);\n  width: fit-content;\n\n  input {\n    display: none;\n  }\n\n  div {\n    aspect-ratio: 1;\n    background-color: var(--flag-color-white);\n    border: var(--flag-border-width-xs) solid var(--flag-color-grey-400);\n    position: relative;\n    transition: (\n      background-color var(--flag-animation-speed-default),\n      border-color var(--flag-animation-speed-default)\n    );\n  }\n  \n  label {\n    cursor: pointer;\n    pointer-events: none;\n  }\n  \n  &.checked {\n    div {\n      border-color: var(--flag-color-primary);\n    }\n  }\n\n  &:hover {\n    color: var(--flag-color-primary-700);\n\n    &.checked {\n      div {\n        border-color: var(--flag-color-primary-700);\n      }\n    }\n  }\n\n  &:active {\n    color: var(--flag-color-primary-600);\n\n    &.checked {\n      div {\n        border-color: var(--flag-color-primary-600);\n      }\n    }\n  }\n\n  &.disabled {\n    color: var(--flag-color-grey-500);\n    pointer-events: none;\n    user-select: none;\n\n    div {\n      background-color: var(--flag-color-grey-200);\n      border-color: var(--flag-color-grey-400);\n    }\n  }\n}\n",
                    "styleUrl": "../form-field/checkable-input.css"
                },
                {
                    "data": ":host {  \n  div {\n    border-radius: 50%;\n\n    &::after {\n      background-color: var(--flag-color-primary);\n      border-radius: inherit;\n      content: '';\n      inset: 0.125rem;\n      opacity: 0;\n      position: absolute;\n      transition: (\n        background-color var(--flag-animation-speed-default),\n        opacity var(--flag-animation-speed-default)\n      );\n    }\n  }\n  \n  &.checked {\n    div {\n      &::after {\n        opacity: 1;\n      }\n    }\n  }\n\n  &:hover {\n    &.checked {\n      div {\n        &::after {\n          background-color: var(--flag-color-primary-700);\n        }\n      }\n    }\n  }\n\n  &:active {\n    &.checked {\n      div {\n        &::after {\n          background-color: var(--flag-color-primary-600);\n        }\n      }\n    }\n  }\n\n  &.disabled {\n    div {\n      &::after {\n        background-color: var(--flag-color-grey-400);\n      }\n    }\n  }\n}\n",
                    "styleUrl": "./radio-button.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "ControlValueAccessor"
            ],
            "accessors": {
                "checkedClass": {
                    "name": "checkedClass",
                    "getSignature": {
                        "name": "checkedClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 32
                    }
                },
                "disabledClass": {
                    "name": "disabledClass",
                    "getSignature": {
                        "name": "disabledClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 37
                    }
                }
            },
            "templateData": "<input type=\"radio\" [checked]=\"checked()\" [id]=\"uuid\" [name]=\"name()\">\n<div\n  role=\"radio\"\n  [attr.aria-checked]=\"checked()\"\n  [attr.aria-disabled]=\"disabled()\"\n  [tabindex]=\"disabled() ? -1 : 0\"\n></div>\n<label tabindex=\"-1\" [for]=\"uuid\">\n  <ng-content />\n</label>\n"
        },
        {
            "name": "FlagRadioButtonGroupComponent",
            "id": "component-FlagRadioButtonGroupComponent-9e1a45d7136f2aa9c52440fee7a224775876a17635f4d7da598abc7a248daaba93b21d80541f8a78c09d5a06999b6b89297fd8cd66db9615ddd376f96dcdadb6",
            "file": "projects/flagarchive/src/components/radio-button-group/radio-button-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [
                {
                    "name": "{\n    provide: NG_VALUE_ACCESSOR, useExisting: FlagRadioButtonGroupComponent, multi: true,\n}",
                    "type": "component"
                }
            ],
            "selector": "flag-radio-button-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./radio-button-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "#onChange",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#uuid",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "radioButtons",
                    "defaultValue": "contentChildren(FlagRadioButtonComponent)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "methodsClass": [
                {
                    "name": "#handleCheckedChange",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "#setRadioButtonsName",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngAfterContentInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerOnChange",
                    "args": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ]
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 38,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "type": "function",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "function": [
                                {
                                    "name": "value",
                                    "type": "",
                                    "deprecated": false,
                                    "deprecationMessage": ""
                                }
                            ],
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "registerOnTouched",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setDisabledState",
                    "args": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": true,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "isDisabled",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "writeValue",
                    "args": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  AfterContentInit,\n  ChangeDetectionStrategy,\n  Component,\n  contentChildren,\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { FlagRadioButtonComponent } from '../radio-button';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: FlagRadioButtonGroupComponent,\n      multi: true,\n    },\n  ],\n  selector: 'flag-radio-button-group',\n  standalone: true,\n  styleUrl: './radio-button-group.component.css',\n  templateUrl: './radio-button-group.component.html',\n})\nexport class FlagRadioButtonGroupComponent implements AfterContentInit, ControlValueAccessor {\n  radioButtons = contentChildren(FlagRadioButtonComponent);\n\n  #onChange: (value: unknown) => void = () => {\n    // noop\n  };\n  #uuid = crypto.randomUUID();\n\n  ngAfterContentInit() {\n    this.#setRadioButtonsName();\n    this.#handleCheckedChange();\n  }\n\n  registerOnChange(fn: (value: unknown) => void) {\n    this.#onChange = fn;\n  }\n\n  registerOnTouched() {\n    // noop\n  }\n\n  setDisabledState?(isDisabled: boolean) {\n    this.radioButtons().forEach(radio => radio.disabled.set(isDisabled));\n  }\n\n  writeValue(value: boolean) {\n    this.radioButtons().forEach(radio => {\n      radio.checked.set(value);\n    });\n  }\n\n  #handleCheckedChange() {\n    this.radioButtons().forEach(radio => {\n      radio.checked.subscribe(checked => {\n        if (!checked) {\n          return;\n        }\n\n        this.radioButtons().forEach(otherRadio => {\n          if (otherRadio !== radio) {\n            otherRadio.checked.set(false);\n          }\n        });\n\n        this.#onChange(radio.checked());\n      });\n    });\n  }\n\n  #setRadioButtonsName() {\n    this.radioButtons().forEach(radio => {\n      radio.name.set(this.#uuid);\n    });\n  }\n}\n",
            "styleUrl": "./radio-button-group.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "implements": [
                "AfterContentInit",
                "ControlValueAccessor"
            ],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagSkeletonComponent",
            "id": "component-FlagSkeletonComponent-632f11001efa8dbbd06747b766c502f10d8e9b51868ec278a9634fb0a94131855fda4fde74da985d85a8f5b289c06f1a7083f5b8b7617ba60c0aff0b04ba3a52",
            "file": "projects/flagarchive/src/components/skeleton/skeleton.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-skeleton",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "soft",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'flag-skeleton',\n  standalone: true,\n  imports: [CommonModule],\n  template: '',\n  styleUrl: './skeleton.component.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FlagSkeletonComponent {\n  @HostBinding('class.soft')\n  @Input()\n  public soft = false;\n\n  @HostBinding('class.loading')\n  @Input()\n  public loading = false;\n}\n",
            "styleUrl": "./skeleton.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "FlagStepperComponent",
            "id": "component-FlagStepperComponent-2673bb8d6ed8a8d0e704fed60a6ab9ae10e9c565e9e73466ee27f2ad303d88b3df5e3463892971fad6aa0df7ddb1793199b47a24b46abab413a409cbdce9d0f9",
            "file": "projects/flagarchive/src/components/stepper/stepper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-stepper",
            "styleUrls": [
                "./stepper.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "cdr",
                    "defaultValue": "inject(ChangeDetectorRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepperService",
                    "defaultValue": "inject(FlagStepperService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "steps",
                    "defaultValue": "model.required<Step[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setActiveStep",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "NgClass"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  OnInit,\n  inject,\n  model,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nimport { Step } from './stepper.model';\nimport { FlagStepperService } from './stepper.service';\nimport { NgClass } from '@angular/common';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [NgClass],\n  selector: 'flag-stepper',\n  standalone: true,\n  styleUrls: ['./stepper.component.css'],\n  templateUrl: './stepper.component.html',\n})\nexport class FlagStepperComponent implements OnInit {\n  private cdr = inject(ChangeDetectorRef);\n  private destroyRef = inject(DestroyRef);\n  private stepperService = inject(FlagStepperService);\n\n  public steps = model.required<Step[]>();\n  public activeStep = model(0);\n\n  public ngOnInit(): void {\n    this.stepperService.steps$.pipe(takeUntilDestroyed(this.destroyRef)).subscribe(steps => {\n      this.steps.set(steps);\n      this.cdr.detectChanges();\n    });\n  }\n\n  public setActiveStep(index: number): void {\n    this.activeStep.set(index);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  color: var(--flag-color-primary);\n  display: grid;\n  font-family: var(--flag-font-family-primary);\n  gap: var(--flag-space-2xl);\n  position: relative;\n  width: max-content;\n}\n\np {\n  cursor: pointer;\n  margin: 0;\n  padding-left: calc(var(--flag-size-xs) + var(--flag-space-md));\n  position: relative;\n  z-index: 1;\n\n  &::before {\n    border: 0.125rem solid var(--flag-color-grey-400);\n    border-radius: 50%;\n    content: '';\n    height: var(--flag-size-xs);\n    left: 0;\n    position: absolute;\n    width: var(--flag-size-xs);\n    z-index: 2;\n  }\n\n  &:not(:last-of-type) {\n    &::after {\n      background-color: var(--flag-color-primary);\n      content: '';\n      height: var(--flag-space-3xl);\n      left: calc(var(--flag-space-sm) + 0.125rem / 2);\n      position: absolute;\n      top: calc(var(--flag-size-xs) + 0.125rem);\n      width: 0.125rem;\n    }\n  }\n\n  &.completed {\n    &::before {\n      background-color: var(--flag-color-primary-500);\n    }\n  }\n\n  &.active {\n    &::before {\n      border-color: var(--flag-color-primary-500);\n    }\n\n    &::after {\n      background-color: var(--flag-color-grey-400);\n    }\n  }\n\n  &.disabled {\n    color: var(--flag-color-grey-500);\n    pointer-events: none;\n    user-select: none;\n\n    &::before {\n      background-color: var(--flag-color-grey-300);\n      border-color: var(--flag-color-grey-400);\n    }\n  }\n}\n",
                    "styleUrl": "./stepper.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "@for (step of steps(); track i; let i = $index) {\n  <p\n    tabindex=\"0\"\n    [class.active]=\"activeStep() === 1\"\n    [class.completed]=\"activeStep() - 1 === i\"\n    [class.disabled]=\"step.disabled\"\n    (click)=\"setActiveStep(i)\" (keydown)=\"setActiveStep(i)\"\n  >\n    {{ step.label }}\n  </p>\n}\n"
        },
        {
            "name": "FlagTabComponent",
            "id": "component-FlagTabComponent-6b03c4d434b7fd8045691e9aeed95bcb20cd22ae51ace491da40b63fbbf5d4941b4ec44bf4bf33cf2b7c5d4372033b46e2c4f530432ac39c7af86c17d831275c",
            "file": "projects/flagarchive/src/components/tab/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-tab",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, input } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-tab',\n  standalone: true,\n  styleUrl: './tab.component.css',\n  templateUrl: './tab.component.html',\n})\nexport class FlagTabComponent {\n  public disabled = input(false);\n\n  @HostBinding('class.disabled')\n  public get disabledClass(): boolean {\n    return this.disabled();\n  }\n}\n",
            "styleUrl": "./tab.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "disabledClass": {
                    "name": "disabledClass",
                    "getSignature": {
                        "name": "disabledClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 14
                    }
                }
            },
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagTabGroupComponent",
            "id": "component-FlagTabGroupComponent-494d6da487435174a29935110aeea4c90f10201259014ee8e2515ae60f2b009c714caa16a539cb0e5d6d7b345ece6fcf3a5426e2f71bd1e7ad46a975ece53ae7",
            "file": "projects/flagarchive/src/components/tab-group/tab-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-tab-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "linePosition",
                    "defaultValue": "computed(() => `${(100 / this.tabs().length) * this.active()}%`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "lineWidth",
                    "defaultValue": "computed(() => `${100 / this.tabs().length}%`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "input.required<Tab[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setActive",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FlagTabComponent",
                    "type": "component"
                },
                {
                    "name": "NgStyle"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgStyle } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, computed, input, model } from '@angular/core';\n\nimport { FlagTabComponent, Tab } from '../tab';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [FlagTabComponent, NgStyle],\n  selector: 'flag-tab-group',\n  standalone: true,\n  styleUrl: './tab-group.component.css',\n  templateUrl: './tab-group.component.html',\n})\nexport class FlagTabGroupComponent {\n  public tabs = input.required<Tab[]>();\n\n  public active = model(0);\n\n  public linePosition = computed(() => `${(100 / this.tabs().length) * this.active()}%`);\n  public lineWidth = computed(() => `${100 / this.tabs().length}%`);\n\n  public setActive(id: number): void {\n    this.active.set(id);\n  }\n}\n",
            "styleUrl": "./tab-group.component.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@for (tab of tabs(); track $index) {\n  <flag-tab [disabled]=\"tab.disabled\" (click)=\"setActive(tab.id)\">\n    {{ tab.label }}\n  </flag-tab>\n}\n<div class=\"line\" [ngStyle]=\"{ left: linePosition(), width: lineWidth() }\"></div>\n"
        },
        {
            "name": "FlagYearPickerComponent",
            "id": "component-FlagYearPickerComponent-ee5b2c4e72b59ac7b26305f940eeb6b2dd67e09b44ee2ff1b8589358bcd476ba08e42bf75212f16c21011f0e91a4ee0b47dcbac07c108a944f93fba9da9a531d",
            "file": "projects/flagarchive/src/components/year-picker/year-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-year-picker",
            "styleUrls": [
                "./year-picker.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./year-picker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "max",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": false
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                },
                {
                    "name": "rangeSize",
                    "defaultValue": "9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": false
                },
                {
                    "name": "selected",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[number, number]",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "max",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "required": false
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "required": false
                },
                {
                    "name": "rangeSize",
                    "defaultValue": "9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "required": false
                },
                {
                    "name": "selected",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "goToEnd",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "goToStart",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previous",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "reset",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setYear",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FlagButtonDirective",
                    "type": "directive"
                },
                {
                    "name": "FlagIconComponent",
                    "type": "component"
                },
                {
                    "name": "RangePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { ChangeDetectionStrategy, Component, input, model, OnInit } from '@angular/core';\n\nimport { FlagButtonDirective } from '../../directives';\nimport { RangePipe } from '../../pipes';\nimport { FlagIconComponent } from '../icon';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [CommonModule, FlagButtonDirective, FlagIconComponent, RangePipe],\n  selector: 'flag-year-picker',\n  standalone: true,\n  styleUrls: ['./year-picker.component.css'],\n  templateUrl: './year-picker.component.html',\n})\nexport class FlagYearPickerComponent implements OnInit {\n  max = input(0);\n  min = input(0);\n  rangeSize = input(9);\n  selected = model(0);\n\n  activeRange!: [number, number];\n\n  ngOnInit() {\n    const difference = this.max() - this.selected();\n    const multiplier = Math.floor(difference / this.rangeSize());\n    const range = this.rangeSize() * multiplier;\n    const minValue = this.max() - this.rangeSize() + 1 - range;\n    this.activeRange = [minValue < this.min() ? this.min() : minValue, this.max() - range];\n  }\n\n  goToEnd() {\n    this.activeRange = [this.max() - this.rangeSize() + 1, this.max()];\n  }\n\n  goToStart() {\n    this.activeRange = [this.min(), this.min() + this.rangeSize() - 1];\n  }\n\n  next() {\n    const maxValue = this.activeRange[1] + this.rangeSize();\n    const start = this.activeRange[1] + 1;\n    const end = maxValue > this.max() ? this.max() : maxValue;\n    this.activeRange = [start, end];\n  }\n\n  previous() {\n    const minValue = this.activeRange[0] - this.rangeSize();\n    const start = minValue < this.min() ? this.min() : minValue;\n    const end = this.activeRange[0] - 1;\n    this.activeRange = [start, end];\n  }\n\n  reset() {\n    this.goToEnd();\n    this.selected.set(this.max());\n  }\n\n  setYear(year: number) {\n    this.selected.set(year);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  background-color: var(--flag-color-grey-100);\n  border-radius: var(--flag-radius-sm);\n  box-shadow: var(--flag-elevation-xs);\n  box-sizing: border-box;\n  color: var(--flag-color-primary-500);\n  display: grid;\n  font-family: var(--flag-font-family-primary);\n  gap: var(--flag-space-sm);\n  grid-template-rows: auto 1fr;\n  width: max-content;\n  padding: var(--flag-space-sm);\n}\n\n.actions {\n  align-items: center;\n  display: flex;\n  gap: var(--flag-space-sm);\n}\n\n.years {\n  display: grid;\n  gap: var(--flag-space-sm);\n  grid-template-columns: repeat(3, auto);\n}\n",
                    "styleUrl": "./year-picker.component.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"actions\">\n  <button flagButton [disabled]=\"min() === activeRange[0]\" (click)=\"goToStart()\">\n    <flag-icon>keyboard_double_arrow_left</flag-icon>\n  </button>\n  <button flagButton [disabled]=\"min() === activeRange[0]\" (click)=\"previous()\">\n    <flag-icon>keyboard_arrow_left</flag-icon>\n  </button>\n  <button flagButton [disabled]=\"max() === activeRange[1]\" (click)=\"next()\">\n    <flag-icon>keyboard_arrow_right</flag-icon>\n  </button>\n  <button flagButton [disabled]=\"max() === activeRange[1]\" (click)=\"goToEnd()\">\n    <flag-icon>keyboard_double_arrow_right</flag-icon>\n  </button>\n  <button flagButton [disabled]=\"max() === selected()\" (click)=\"reset()\">\n    <flag-icon>refresh</flag-icon>\n  </button>\n</div>\n<div class=\"years\">\n  @for (year of activeRange | range; track $index) {\n    <button flagButton [attr.raised]=\"year === selected() || undefined\" (click)=\"setYear(year)\">\n      {{ year }}\n    </button>\n  }\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    active: true,\n  },\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "BreadcrumbArgs",
                "defaultValue": "{\n  items: [\n    { title: 'Home', link: '/' },\n    { title: 'Category', link: '/category' },\n    { title: 'Subcategory', link: '/subcategory' },\n  ],\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ListItemArgs",
                "defaultValue": "{\n  active: false,\n  disabled: false,\n  interactive: true,\n  label: 'List Item',\n  prefix: '',\n  suffix: '',\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "PillArgs",
                "defaultValue": "{\n  label: 'Beta',\n  theme: PillTheme.Light,\n  type: PillType.Primary,\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SkeletonArgs",
                "defaultValue": "{\n  loading: true,\n  soft: false,\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StepperArgs",
                "defaultValue": "{\n  activeStep: 0,\n  steps: [\n    { disabled: false, label: 'Step 1' },\n    { disabled: false, label: 'Step 2' },\n    { disabled: true, label: 'Step 3' },\n  ],\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TabGroupArgs",
                "defaultValue": "{\n  active: 0,\n  tabs: [\n    { id: 0, disabled: false, label: 'Tab 1', name: 'Tab 1' },\n    { id: 1, disabled: false, label: 'Tab 2', name: 'Tab 2' },\n    { id: 2, disabled: true, label: 'Tab 3', name: 'Tab 3' },\n    { id: 3, disabled: false, label: 'Tab 4', name: 'Tab 4' },\n  ],\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "YearPickerArgs",
                "defaultValue": "{\n  min: 1799,\n  max: 2024,\n  rangeSize: 9,\n  selected: 2024,\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryArgs",
                "defaultValue": "{\n  disabled: false,\n  ghost: false,\n  icon: 'keyboard_arrow_left',\n  raised: true,\n  rounded: false,\n  secondary: false,\n  text: 'Button',\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "CheckboxArgs",
                "defaultValue": "{\n  ...FORM_FIELD_ARGS,\n  checkboxes: 6,\n  checkboxesChecked: [2, 4],\n  checkboxesDisabled: [2, 3, 6],\n  checkboxesIndeterminated: [5, 6],\n  checkboxLabel: 'Entity',\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "InputArgs",
                "defaultValue": "{\n  ...FORM_FIELD_ARGS,\n  inputType: 'text',\n  value: '',\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "RadioButtonArgs",
                "defaultValue": "{\n  ...FORM_FIELD_ARGS,\n  checked: 4,\n  radioButtons: 5,\n  radioButtonsDisabled: [2, 3],\n  radioButtonContent: 'Entity',\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args: {} }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    disabled: true,\n  },\n}"
            },
            {
                "name": "FORM_FIELD_ARGS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormFieldArgs",
                "defaultValue": "{\n  disabled: false,\n  errorMessage: 'Please enter a location or organization',\n  infoMessage: 'An entity that is either a location or an organization',\n  label: 'Location / Organization',\n  placeholder: 'Enter location or organization',\n  readonly: false,\n  required: true,\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BreadcrumbArgs>",
                "defaultValue": "{\n  title: 'Components/Breadcrumb',\n  component: FlagBreadcrumbComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagBreadcrumbComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DropdownArgs>",
                "defaultValue": "{\n  title: 'Components/Dropdown',\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        FlagButtonDirective,\n        FlagCardComponent,\n        FlagDropdownDirective,\n        FlagIconComponent,\n        FlagListItemComponent,\n      ],\n    }),\n  ],\n  render: args => ({\n    props: args,\n    template: `\n      <button flagButton [flagDropdownTrigger]=\"menu\">\n        <flag-icon>menu</flag-icon>\n      </button>\n\n      <ng-template #menu>\n        <flag-card>\n          <flag-list-item>Log in</flag-list-item>\n          <flag-list-item>Sign up</flag-list-item>\n        </flag-card>\n      </ng-template>\n    `,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListItemArgs>",
                "defaultValue": "{\n  title: 'Components/List Item',\n  component: FlagListItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagListItemComponent],\n    }),\n  ],\n  render: ({ label, prefix, suffix, ...args }) => ({\n    props: args,\n    template: `\n      <flag-list-item [active]=\"active\" [disabled]=\"disabled\" [interactive]=\"interactive\">\n        ${prefix && `<flag-icon style=\"font-size: var(--flag-size-sm);\">${prefix}</flag-icon>`}\n        ${label}\n        ${suffix && `<flag-icon style=\"font-size: var(--flag-size-sm);\">${suffix}</flag-icon>`}\n      </flag-list-item>\n    `,\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Chip',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<PillArgs>",
                "defaultValue": "{\n  title: 'Components/Pill',\n  component: FlagPillComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagPillComponent],\n    }),\n  ],\n  render: ({ label, ...args }) => ({\n    props: args,\n    template: `\n      <flag-pill [theme]=\"theme\" [type]=\"type\">\n        ${label}\n      </flag-pill>\n    `,\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Beta',\n    },\n    theme: {\n      control: 'select',\n      options: Object.values(PillTheme),\n      defaultValue: PillTheme.Light,\n    },\n    type: {\n      control: 'select',\n      options: Object.values(PillType),\n      defaultValue: PillType.Primary,\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkeletonArgs>",
                "defaultValue": "{\n  title: 'Components/Skeleton',\n  component: FlagSkeletonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagSkeletonComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <flag-skeleton\n        style=\"height: 8rem; width: 12rem\"\n        [loading]=\"loading\"\n        [soft]=\"soft\"\n      />\n    `,\n  }),\n  argTypes: {},\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperArgs>",
                "defaultValue": "{\n  title: 'Components/Stepper (deprecated)',\n  component: FlagStepperComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagStepperComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabGroupArgs>",
                "defaultValue": "{\n  title: 'Components/Tab Group',\n  component: FlagTabGroupComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagTabGroupComponent, FlagIconComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<YearPickerArgs>",
                "defaultValue": "{\n  title: 'Components/Year Picker (beta)',\n  component: FlagYearPickerComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"max-width: 20rem\">${story}</div>`,\n    ),\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagYearPickerComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  title: 'Core/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [FlagButtonDirective, FlagIconComponent],\n    }),\n  ],\n  render: (props) => ({\n    props,\n    template: `\n      <button\n        flagButton\n        type=\"button\"\n        [attr.ghost]=${props.ghost || undefined}\n        [attr.raised]=${props.raised || undefined}\n        [attr.rounded]=${props.rounded || undefined}\n        [attr.secondary]=${props.secondary || undefined}\n        [disabled]=${props.disabled || undefined}\n      >\n        ${props.icon && `<flag-icon>${props.icon}</flag-icon>`}\n        ${props.text}\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckboxArgs>",
                "defaultValue": "{\n  title: 'Components/Form Field/Checkbox',\n  component: FlagCheckboxComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagCheckboxComponent, FlagCheckboxGroupComponent, FlagFormFieldComponent],\n    }),\n  ],\n  render: props => ({\n    props,\n    template: `\n      <flag-form-field errorMessage=\"${props.errorMessage}\" infoMessage=\"${props.infoMessage}\">\n        ${setLabel(props.label, props.required)}\n        <flag-checkbox-group>\n          ${setCheckboxes(props)}\n        </flag-checkbox-group>\n      </flag-form-field>\n    `,\n  }),\n  argTypes: {\n    checkboxesChecked: {\n      control: {\n        type: 'multi-select',\n      },\n      options: Array.from({ length: 10 }).map((_, i) => i + 1),\n    },\n    checkboxesDisabled: {\n      control: {\n        type: 'multi-select',\n      },\n      options: Array.from({ length: 10 }).map((_, i) => i + 1),\n    },\n    checkboxesIndeterminated: {\n      control: {\n        type: 'multi-select',\n      },\n      options: Array.from({ length: 10 }).map((_, i) => i + 1),\n    },\n    label: {\n      control: 'text',\n      defaultValue: 'Entity',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputArgs>",
                "defaultValue": "{\n  title: 'Components/Form Field/Input',\n  component: FlagFormFieldComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagFormFieldComponent],\n    }),\n  ],\n  render: props => ({\n    props,\n    template: `\n      <flag-form-field errorMessage=\"${props.errorMessage}\" infoMessage=\"${props.infoMessage}\">\n        ${setLabel(props.label, props.required)}\n        ${setInput(props)}\n      </flag-form-field>\n    `,\n  }),\n  argTypes: {\n    errorMessage: {\n      control: 'text',\n    },\n    infoMessage: {\n      control: 'text',\n    },\n    inputType: {\n      control: 'select',\n      options: ['text'],\n    },\n    label: {\n      control: 'text',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonArgs>",
                "defaultValue": "{\n  title: 'Components/Form Field/Radio Button',\n  component: FlagRadioButtonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagFormFieldComponent, FlagRadioButtonComponent, FlagRadioButtonGroupComponent],\n    }),\n  ],\n  render: props => ({\n    props,\n    template: `\n      <flag-form-field errorMessage=\"${props.errorMessage}\" infoMessage=\"${props.infoMessage}\">\n        ${setLabel(props.label, props.required)}\n        <flag-radio-button-group>\n          ${setRadioButtons(props)}\n        </flag-radio-button-group>\n      </flag-form-field>\n    `,\n  }),\n  argTypes: {\n    checked: {\n      control: 'number',\n    },\n    label: {\n      control: 'text',\n      defaultValue: 'Radio Button',\n    },\n  },\n}"
            },
            {
                "name": "NotInteractive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    interactive: false,\n  },\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    backgrounds: {\n      default: 'light',\n      values: [\n        {\n          name: 'light',\n          value: 'var(--flag-color-grey-200)'\n        },\n        {\n          name: 'primary',\n          value: 'var(--flag-color-primary-500)'\n        },\n        {\n          name: 'dark',\n          value: 'var(--flag-color-grey-700)'\n        }\n      ]\n    },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n}"
            },
            {
                "name": "Soft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { ...args, soft: true },\n}"
            },
            {
                "name": "Static",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { ...args, loading: false },\n}"
            },
            {
                "name": "WithAffixes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    prefix: 'star',\n    suffix: 'keyboard_arrow_right',\n  },\n}"
            }
        ],
        "functions": [
            {
                "name": "setCheckboxes",
                "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "props",
                        "type": "CheckboxArgs",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "props",
                        "type": "CheckboxArgs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "setInput",
                "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "props",
                        "type": "InputArgs",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "props",
                        "type": "InputArgs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "setLabel",
                "file": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "label",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    },
                    {
                        "name": "required",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "returnType": "string",
                "jsdoctags": [
                    {
                        "name": "label",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "required",
                        "type": "boolean",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "setRadioButtons",
                "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "props",
                        "type": "RadioButtonArgs",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "props",
                        "type": "RadioButtonArgs",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "CheckboxArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "DropdownArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 159
            },
            {
                "name": "InputArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "RadioButtonArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "SkeletonArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "FlagSkeletonComponent",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BreadcrumbArgs>",
                "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DropdownArgs>",
                "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListItemArgs>",
                "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<PillArgs>",
                "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkeletonArgs>",
                "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperArgs>",
                "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabGroupArgs>",
                "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<YearPickerArgs>",
                "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckboxArgs>",
                "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputArgs>",
                "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonArgs>",
                "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [
            {
                "name": "PillTheme",
                "childs": [
                    {
                        "name": "Dark",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "dark"
                    },
                    {
                        "name": "Light",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "light"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/flagarchive/src/components/pill/pill.model.ts"
            },
            {
                "name": "PillType",
                "childs": [
                    {
                        "name": "Error",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "error"
                    },
                    {
                        "name": "Primary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "primary"
                    },
                    {
                        "name": "Secondary",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "secondary"
                    },
                    {
                        "name": "Success",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "success"
                    },
                    {
                        "name": "Warning",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "warning"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "projects/flagarchive/src/components/pill/pill.model.ts"
            }
        ],
        "groupedVariables": {
            "projects/flagarchive/src/storybook/components/list-item.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    active: true,\n  },\n}"
                },
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemArgs",
                    "defaultValue": "{\n  active: false,\n  disabled: false,\n  interactive: true,\n  label: 'List Item',\n  prefix: '',\n  suffix: '',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    disabled: true,\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListItemArgs>",
                    "defaultValue": "{\n  title: 'Components/List Item',\n  component: FlagListItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagListItemComponent],\n    }),\n  ],\n  render: ({ label, prefix, suffix, ...args }) => ({\n    props: args,\n    template: `\n      <flag-list-item [active]=\"active\" [disabled]=\"disabled\" [interactive]=\"interactive\">\n        ${prefix && `<flag-icon style=\"font-size: var(--flag-size-sm);\">${prefix}</flag-icon>`}\n        ${label}\n        ${suffix && `<flag-icon style=\"font-size: var(--flag-size-sm);\">${suffix}</flag-icon>`}\n      </flag-list-item>\n    `,\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Chip',\n    },\n  },\n}"
                },
                {
                    "name": "NotInteractive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    interactive: false,\n  },\n}"
                },
                {
                    "name": "WithAffixes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    prefix: 'star',\n    suffix: 'keyboard_arrow_right',\n  },\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreadcrumbArgs",
                    "defaultValue": "{\n  items: [\n    { title: 'Home', link: '/' },\n    { title: 'Category', link: '/category' },\n    { title: 'Subcategory', link: '/subcategory' },\n  ],\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BreadcrumbArgs>",
                    "defaultValue": "{\n  title: 'Components/Breadcrumb',\n  component: FlagBreadcrumbComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagBreadcrumbComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/pill.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PillArgs",
                    "defaultValue": "{\n  label: 'Beta',\n  theme: PillTheme.Light,\n  type: PillType.Primary,\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<PillArgs>",
                    "defaultValue": "{\n  title: 'Components/Pill',\n  component: FlagPillComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagPillComponent],\n    }),\n  ],\n  render: ({ label, ...args }) => ({\n    props: args,\n    template: `\n      <flag-pill [theme]=\"theme\" [type]=\"type\">\n        ${label}\n      </flag-pill>\n    `,\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Beta',\n    },\n    theme: {\n      control: 'select',\n      options: Object.values(PillTheme),\n      defaultValue: PillTheme.Light,\n    },\n    type: {\n      control: 'select',\n      options: Object.values(PillType),\n      defaultValue: PillType.Primary,\n    },\n  },\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/skeleton.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SkeletonArgs",
                    "defaultValue": "{\n  loading: true,\n  soft: false,\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkeletonArgs>",
                    "defaultValue": "{\n  title: 'Components/Skeleton',\n  component: FlagSkeletonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagSkeletonComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <flag-skeleton\n        style=\"height: 8rem; width: 12rem\"\n        [loading]=\"loading\"\n        [soft]=\"soft\"\n      />\n    `,\n  }),\n  argTypes: {},\n}"
                },
                {
                    "name": "Soft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { ...args, soft: true },\n}"
                },
                {
                    "name": "Static",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { ...args, loading: false },\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/stepper.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepperArgs",
                    "defaultValue": "{\n  activeStep: 0,\n  steps: [\n    { disabled: false, label: 'Step 1' },\n    { disabled: false, label: 'Step 2' },\n    { disabled: true, label: 'Step 3' },\n  ],\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperArgs>",
                    "defaultValue": "{\n  title: 'Components/Stepper (deprecated)',\n  component: FlagStepperComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagStepperComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/tab-group.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabGroupArgs",
                    "defaultValue": "{\n  active: 0,\n  tabs: [\n    { id: 0, disabled: false, label: 'Tab 1', name: 'Tab 1' },\n    { id: 1, disabled: false, label: 'Tab 2', name: 'Tab 2' },\n    { id: 2, disabled: true, label: 'Tab 3', name: 'Tab 3' },\n    { id: 3, disabled: false, label: 'Tab 4', name: 'Tab 4' },\n  ],\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabGroupArgs>",
                    "defaultValue": "{\n  title: 'Components/Tab Group',\n  component: FlagTabGroupComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagTabGroupComponent, FlagIconComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n  argTypes: {},\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/year-picker.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "YearPickerArgs",
                    "defaultValue": "{\n  min: 1799,\n  max: 2024,\n  rangeSize: 9,\n  selected: 2024,\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<YearPickerArgs>",
                    "defaultValue": "{\n  title: 'Components/Year Picker (beta)',\n  component: FlagYearPickerComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator(\n      (story) => `<div style=\"max-width: 20rem\">${story}</div>`,\n    ),\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagYearPickerComponent],\n    }),\n  ],\n  render: (args) => ({\n    props: args,\n  }),\n}"
                }
            ],
            "projects/flagarchive/src/storybook/core/button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryArgs",
                    "defaultValue": "{\n  disabled: false,\n  ghost: false,\n  icon: 'keyboard_arrow_left',\n  raised: true,\n  rounded: false,\n  secondary: false,\n  text: 'Button',\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  title: 'Core/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [FlagButtonDirective, FlagIconComponent],\n    }),\n  ],\n  render: (props) => ({\n    props,\n    template: `\n      <button\n        flagButton\n        type=\"button\"\n        [attr.ghost]=${props.ghost || undefined}\n        [attr.raised]=${props.raised || undefined}\n        [attr.rounded]=${props.rounded || undefined}\n        [attr.secondary]=${props.secondary || undefined}\n        [disabled]=${props.disabled || undefined}\n      >\n        ${props.icon && `<flag-icon>${props.icon}</flag-icon>`}\n        ${props.text}\n      </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CheckboxArgs",
                    "defaultValue": "{\n  ...FORM_FIELD_ARGS,\n  checkboxes: 6,\n  checkboxesChecked: [2, 4],\n  checkboxesDisabled: [2, 3, 6],\n  checkboxesIndeterminated: [5, 6],\n  checkboxLabel: 'Entity',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckboxArgs>",
                    "defaultValue": "{\n  title: 'Components/Form Field/Checkbox',\n  component: FlagCheckboxComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagCheckboxComponent, FlagCheckboxGroupComponent, FlagFormFieldComponent],\n    }),\n  ],\n  render: props => ({\n    props,\n    template: `\n      <flag-form-field errorMessage=\"${props.errorMessage}\" infoMessage=\"${props.infoMessage}\">\n        ${setLabel(props.label, props.required)}\n        <flag-checkbox-group>\n          ${setCheckboxes(props)}\n        </flag-checkbox-group>\n      </flag-form-field>\n    `,\n  }),\n  argTypes: {\n    checkboxesChecked: {\n      control: {\n        type: 'multi-select',\n      },\n      options: Array.from({ length: 10 }).map((_, i) => i + 1),\n    },\n    checkboxesDisabled: {\n      control: {\n        type: 'multi-select',\n      },\n      options: Array.from({ length: 10 }).map((_, i) => i + 1),\n    },\n    checkboxesIndeterminated: {\n      control: {\n        type: 'multi-select',\n      },\n      options: Array.from({ length: 10 }).map((_, i) => i + 1),\n    },\n    label: {\n      control: 'text',\n      defaultValue: 'Entity',\n    },\n  },\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/input.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "InputArgs",
                    "defaultValue": "{\n  ...FORM_FIELD_ARGS,\n  inputType: 'text',\n  value: '',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputArgs>",
                    "defaultValue": "{\n  title: 'Components/Form Field/Input',\n  component: FlagFormFieldComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagFormFieldComponent],\n    }),\n  ],\n  render: props => ({\n    props,\n    template: `\n      <flag-form-field errorMessage=\"${props.errorMessage}\" infoMessage=\"${props.infoMessage}\">\n        ${setLabel(props.label, props.required)}\n        ${setInput(props)}\n      </flag-form-field>\n    `,\n  }),\n  argTypes: {\n    errorMessage: {\n      control: 'text',\n    },\n    infoMessage: {\n      control: 'text',\n    },\n    inputType: {\n      control: 'select',\n      options: ['text'],\n    },\n    label: {\n      control: 'text',\n    },\n  },\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RadioButtonArgs",
                    "defaultValue": "{\n  ...FORM_FIELD_ARGS,\n  checked: 4,\n  radioButtons: 5,\n  radioButtonsDisabled: [2, 3],\n  radioButtonContent: 'Entity',\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonArgs>",
                    "defaultValue": "{\n  title: 'Components/Form Field/Radio Button',\n  component: FlagRadioButtonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagFormFieldComponent, FlagRadioButtonComponent, FlagRadioButtonGroupComponent],\n    }),\n  ],\n  render: props => ({\n    props,\n    template: `\n      <flag-form-field errorMessage=\"${props.errorMessage}\" infoMessage=\"${props.infoMessage}\">\n        ${setLabel(props.label, props.required)}\n        <flag-radio-button-group>\n          ${setRadioButtons(props)}\n        </flag-radio-button-group>\n      </flag-form-field>\n    `,\n  }),\n  argTypes: {\n    checked: {\n      control: 'number',\n    },\n    label: {\n      control: 'text',\n      defaultValue: 'Radio Button',\n    },\n  },\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args: {} }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DropdownArgs>",
                    "defaultValue": "{\n  title: 'Components/Dropdown',\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        FlagButtonDirective,\n        FlagCardComponent,\n        FlagDropdownDirective,\n        FlagIconComponent,\n        FlagListItemComponent,\n      ],\n    }),\n  ],\n  render: args => ({\n    props: args,\n    template: `\n      <button flagButton [flagDropdownTrigger]=\"menu\">\n        <flag-icon>menu</flag-icon>\n      </button>\n\n      <ng-template #menu>\n        <flag-card>\n          <flag-list-item>Log in</flag-list-item>\n          <flag-list-item>Sign up</flag-list-item>\n        </flag-card>\n      </ng-template>\n    `,\n  }),\n}"
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts": [
                {
                    "name": "FORM_FIELD_ARGS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormFieldArgs",
                    "defaultValue": "{\n  disabled: false,\n  errorMessage: 'Please enter a location or organization',\n  infoMessage: 'An entity that is either a location or an organization',\n  label: 'Location / Organization',\n  placeholder: 'Enter location or organization',\n  readonly: false,\n  required: true,\n}"
                }
            ],
            "projects/flagarchive/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    backgrounds: {\n      default: 'light',\n      values: [\n        {\n          name: 'light',\n          value: 'var(--flag-color-grey-200)'\n        },\n        {\n          name: 'primary',\n          value: 'var(--flag-color-primary-500)'\n        },\n        {\n          name: 'dark',\n          value: 'var(--flag-color-grey-700)'\n        }\n      ]\n    },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {
            "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts": [
                {
                    "name": "setCheckboxes",
                    "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "props",
                            "type": "CheckboxArgs",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "CheckboxArgs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/input.stories.ts": [
                {
                    "name": "setInput",
                    "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "props",
                            "type": "InputArgs",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "InputArgs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts": [
                {
                    "name": "setLabel",
                    "file": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "required",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "returnType": "string",
                    "jsdoctags": [
                        {
                            "name": "label",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "required",
                            "type": "boolean",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts": [
                {
                    "name": "setRadioButtons",
                    "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "props",
                            "type": "RadioButtonArgs",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "props",
                            "type": "RadioButtonArgs",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "projects/flagarchive/src/components/pill/pill.model.ts": [
                {
                    "name": "PillTheme",
                    "childs": [
                        {
                            "name": "Dark",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "dark"
                        },
                        {
                            "name": "Light",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "light"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/flagarchive/src/components/pill/pill.model.ts"
                },
                {
                    "name": "PillType",
                    "childs": [
                        {
                            "name": "Error",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "error"
                        },
                        {
                            "name": "Primary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "primary"
                        },
                        {
                            "name": "Secondary",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "secondary"
                        },
                        {
                            "name": "Success",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "success"
                        },
                        {
                            "name": "Warning",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "warning"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "projects/flagarchive/src/components/pill/pill.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts": [
                {
                    "name": "CheckboxArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckboxArgs>",
                    "file": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/dropdown.stories.ts": [
                {
                    "name": "DropdownArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 159
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DropdownArgs>",
                    "file": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/input.stories.ts": [
                {
                    "name": "InputArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputArgs>",
                    "file": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts": [
                {
                    "name": "RadioButtonArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonArgs>",
                    "file": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/skeleton.stories.ts": [
                {
                    "name": "SkeletonArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "FlagSkeletonComponent",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkeletonArgs>",
                    "file": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BreadcrumbArgs>",
                    "file": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/list-item.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListItemArgs>",
                    "file": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/pill.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<PillArgs>",
                    "file": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/stepper.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperArgs>",
                    "file": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/tab-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabGroupArgs>",
                    "file": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/components/year-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<YearPickerArgs>",
                    "file": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/storybook/core/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "projects/flagarchive/src/storybook/core/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/flagarchive/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/checkbox-group/checkbox-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagCheckboxGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagCheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/18",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagFormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/pill/pill.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagPillComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/radio-button-group/radio-button-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagRadioButtonGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/radio-button/radio-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagRadioButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagSkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagStepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Step",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlagStepperService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab-group/tab-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagTabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab/tab.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/year-picker/year-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagYearPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/directives/button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FlagButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/directives/dropdown.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FlagDropdownDirective",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/pipes/range.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RangePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbArgs",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "setCheckboxes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/checkbox.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FormFieldArgs",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "setLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/form-field.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FORM_FIELD_ARGS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "setInput",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/input.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "setRadioButtons",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/form-field/radio-button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ListItemArgs",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotInteractive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAffixes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PillArgs",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/pill.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Soft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Static",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StepperArgs",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TabGroupArgs",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "YearPickerArgs",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/components/year-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "StoryArgs",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/storybook/core/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}