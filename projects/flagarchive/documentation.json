{
    "pipes": [
        {
            "name": "RangePipe",
            "id": "pipe-RangePipe-d2a182217b2fc900c8bda6fe873d7ff4653f34a695b8ea4863e3e2d26c6e5f9378ac0fe689aed0681b4c248dc0cd0baa318769296989ae6cbbb4c4bd9f04e8d7",
            "file": "projects/flagarchive/src/pipes/range.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "range",
                            "type": "[number, number]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number[]",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "range",
                            "type": "[number, number]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "standalone": true,
            "ngname": "range",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'range',\n  standalone: true\n})\nexport class RangePipe implements PipeTransform {\n\n  public transform(range: [number, number]): number[] {\n    if (!range) {\n      return [];\n    }\n\n    return Array(range[1] - range[0] + 1).fill(0).map((_, i) => {\n      return range[0] + i;\n    });\n  }\n\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "BreadcrumbItem",
            "id": "interface-BreadcrumbItem-746e13cf8ccdafd53121f2efffc8183d2f8c227dd65ccaae0a553d8c61edeed7d8a3293ac27f449cec6629b403e2fdef714e70b3963a55b45f600b6891380086",
            "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface BreadcrumbItem {\n  title: string;\n  link?: string;\n}\n",
            "properties": [
                {
                    "name": "link",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Step",
            "id": "interface-Step-c140b87475c6bd3a9f8d5ce614abc4497ba0bf0b2cec17b31fc1d636dcabb11f0056b5c0c97660ea26409cd4245142b56dc8b5a53dfe73693520c5116e2c698d",
            "file": "projects/flagarchive/src/components/stepper/stepper.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Step {\n\tlabel: string;\n\tdisabled: boolean;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "Tab",
            "id": "interface-Tab-d1f59de95968e06c6f7439e6578da568edc52588ad0fe23faf780696456a9562aee44f0ecd2e9f6e718e381ccf2449f80b908006612f6a4e0aa782559667c4ba",
            "file": "projects/flagarchive/src/components/tab/tab.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface Tab {\n  id: number;\n  name: string;\n  label: string;\n  disabled: boolean;\n}\n",
            "properties": [
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "label",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "FlagStepperService",
            "id": "injectable-FlagStepperService-3e16dcaa40cdef6c41203b76d12f8773e02304ec441728b04381c93dd486c2a5c2922e3bac5d56413b31a2d836ac8759852cfb00c56cd83275a2cb35d5c8244f",
            "file": "projects/flagarchive/src/components/stepper/stepper.service.ts",
            "properties": [
                {
                    "name": "steps$",
                    "defaultValue": "new Subject<Step[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methods": [
                {
                    "name": "setSteps",
                    "args": [
                        {
                            "name": "steps",
                            "type": "Step[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 12,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "steps",
                            "type": "Step[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\n\nimport { Step } from './stepper.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FlagStepperService {\n  public steps$ = new Subject<Step[]>();\n\n  public setSteps(steps: Step[]): void {\n    return this.steps$.next(steps);\n  }\n}\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "FlagButtonDirective",
            "id": "directive-FlagButtonDirective-acf6bd39d6d0164a9265bb8d0137af88d0f1def3ee49ea5d9028ea15d2d630b2191a63de71e2e6f3e5d078b89c51526649f9f344cb1b2bb5455cfc554dd4f615",
            "file": "projects/flagarchive/src/directives/button.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, inject, OnInit } from '@angular/core';\n\n@Directive({\n  selector: '[flagButton]',\n  standalone: true\n})\nexport class FlagButtonDirective implements OnInit {\n  private elementRef = inject(ElementRef);\n\n  public get element(): HTMLButtonElement {\n    return this.elementRef.nativeElement as HTMLButtonElement;\n  }\n\n  public ngOnInit(): void {\n    if (this.element.childNodes.length !== 1) {\n      return;\n    }\n\n    const node = this.element.childNodes[0];\n    const isFlagIcon = node.nodeName === 'FLAG-ICON';\n    this.element.toggleAttribute('icon-only', isFlagIcon);\n\n    if (isFlagIcon) {\n      (node as HTMLElement).style.width = 'var(--flag-size-sm)';\n    }\n  }\n}\n",
            "selector": "[flagButton]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 8,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "element": {
                    "name": "element",
                    "getSignature": {
                        "name": "element",
                        "type": "",
                        "returnType": "HTMLButtonElement",
                        "line": 10
                    }
                }
            }
        },
        {
            "name": "FlagDropdownDirective",
            "id": "directive-FlagDropdownDirective-72721a7bfcbfecc7ac3583a2145746c8801148b80cb0d182cf818b1cd6cb27571b1a5a99fe373282bef99859cc5df1797afb36221e96184bcbb09361885e1176",
            "file": "projects/flagarchive/src/directives/dropdown.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ConnectedPosition, Overlay, OverlayRef } from '@angular/cdk/overlay';\nimport { TemplatePortal } from '@angular/cdk/portal';\nimport {\n  DestroyRef,\n  Directive,\n  effect,\n  ElementRef,\n  HostListener,\n  inject,\n  input,\n  model,\n  OnDestroy,\n  TemplateRef,\n  ViewContainerRef\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\nimport { EMPTY, merge, Observable } from 'rxjs';\n\n@Directive({\n  selector: '[flagDropdownTrigger]',\n  standalone: true\n})\nexport class FlagDropdownDirective implements OnDestroy {\n  public contentRef = input.required<TemplateRef<unknown>>({\n    alias: 'flagDropdownTrigger',\n  });\n\n  public isOpen = model(false);\n\n  @HostListener('click')\n  public toggle(): void {\n    this.isOpen.set(!this.isOpen());\n  }\n\n  private destroyRef = inject(DestroyRef);\n  private elementRef = inject(ElementRef<HTMLElement>);\n  private overlay = inject(Overlay);\n  private viewContainerRef = inject(ViewContainerRef);\n\n  private overlayRef?: OverlayRef;\n\n  public constructor() {\n    effect(() => {\n      if (this.isOpen()) {\n        this.open();\n      } else {\n        this.close();\n      }\n    });\n  }\n\n  public ngOnDestroy(): void {\n    this.isOpen.set(false);\n    this.overlayRef?.dispose();\n  }\n\n  private open(): void {\n    const xStart: Pick<ConnectedPosition, 'originX' | 'overlayX'> = {\n      originX: 'start',\n      overlayX: 'start',\n    };\n    const xEnd: Pick<ConnectedPosition, 'originX' | 'overlayX'> = {\n      originX: 'end',\n      overlayX: 'end',\n    };\n    const yTop: Pick<ConnectedPosition, 'originY' | 'overlayY'> = {\n      originY: 'top',\n      overlayY: 'bottom',\n    };\n    const yBottom: Pick<ConnectedPosition, 'originY' | 'overlayY'> = {\n      originY: 'bottom',\n      overlayY: 'top',\n    };\n    const positions: ConnectedPosition[] = [\n      { ...xStart, ...yBottom, offsetY: 4 },\n      { ...xEnd, ...yBottom, offsetY: 4 },\n      { ...xStart, ...yTop, offsetY: -4 },\n      { ...xEnd, ...yTop, offsetY: -4 },\n    ];\n    const templatePortal = new TemplatePortal(\n      this.contentRef(),\n      this.viewContainerRef\n    );\n\n    this.overlayRef = this.overlay.create({\n      hasBackdrop: true,\n      backdropClass: 'cdk-overlay-transparent-backdrop',\n      scrollStrategy: this.overlay.scrollStrategies.reposition(),\n      positionStrategy: this.overlay\n        .position()\n        .flexibleConnectedTo(this.elementRef)\n        .withPositions(positions)\n    });\n    this.overlayRef.attach(templatePortal);\n\n    this.actions().pipe(\n      takeUntilDestroyed(this.destroyRef)\n    ).subscribe(() => {\n      this.isOpen.set(false);\n    });\n  }\n\n  private actions(): Observable<MouseEvent | void> {\n    if (!this.overlayRef) {\n      return EMPTY;\n    }\n\n    const backdropClick$ = this.overlayRef.backdropClick();\n    const detachments$ = this.overlayRef.detachments();\n\n    return merge(backdropClick$, detachments$);\n  }\n\n  private close(): void {\n    this.isOpen.set(false);\n    this.overlayRef?.detach();\n  }\n}\n",
            "selector": "[flagDropdownTrigger]",
            "providers": [],
            "hostDirectives": [],
            "standalone": true,
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31
                }
            ],
            "propertiesClass": [
                {
                    "name": "contentRef",
                    "defaultValue": "input.required<TemplateRef<unknown>>({\n    alias: 'flagDropdownTrigger',\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "elementRef",
                    "defaultValue": "inject(ElementRef<HTMLElement>)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "overlay",
                    "defaultValue": "inject(Overlay)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "overlayRef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OverlayRef",
                    "optional": true,
                    "description": "",
                    "line": 40,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "viewContainerRef",
                    "defaultValue": "inject(ViewContainerRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "actions",
                    "args": [],
                    "optional": false,
                    "returnType": "Observable<MouseEvent | void>",
                    "typeParameters": [],
                    "line": 103,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 114,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "toggle",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        125
                    ]
                }
            ],
            "extends": [],
            "implements": [
                "OnDestroy"
            ],
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 40,
                "modifierKind": [
                    125
                ]
            }
        }
    ],
    "components": [
        {
            "name": "FlagBreadcrumbComponent",
            "id": "component-FlagBreadcrumbComponent-e0ab7bba6f549d74fe074c3415f6dee3f62100407d8082de19191d7d49bcf876b3fb3f232ef35bc188d7e7bf713928d349f7e0880acea2ceddf17f579bb85de4",
            "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-breadcrumb",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./breadcrumb.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "propertiesClass": [
                {
                    "name": "items",
                    "defaultValue": "input.required<BreadcrumbItem[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "selectedItem",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [
                {
                    "name": "selectItem",
                    "args": [
                        {
                            "name": "item",
                            "type": "BreadcrumbItem",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "BreadcrumbItem",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, input, output } from '@angular/core';\n\nimport { BreadcrumbItem } from './breadcrumb.model';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-breadcrumb',\n  standalone: true,\n  styleUrl: './breadcrumb.component.scss',\n  templateUrl: './breadcrumb.component.html',\n})\nexport class FlagBreadcrumbComponent {\n  public items = input.required<BreadcrumbItem[]>();\n\n  public selectedItem = output<BreadcrumbItem>();\n\n  public selectItem(item: BreadcrumbItem): void {\n    this.selectedItem.emit(item);\n  }\n}\n",
            "styleUrl": "./breadcrumb.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@for (item of items(); track $index) {\n  <a\n    tabindex=\"0\"\n    (click)=\"selectItem(item)\"\n    (keyup)=\"selectItem(item)\"\n  >{{ item.title }}</a>\n  /\n}\n"
        },
        {
            "name": "FlagCardComponent",
            "id": "component-FlagCardComponent-11ced33617808c69e49786cedeacae57e92644c4804baaa9ab992f770a3a1aeefcb7c932e4cb0e68f24f55a051b2bea2de2db55345c709d41c8cfd02e0be664b",
            "file": "projects/flagarchive/src/components/card/card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-card',\n  standalone: true,\n  styleUrl: './card.component.scss',\n  templateUrl: './card.component.html',\n})\nexport class FlagCardComponent {}\n",
            "styleUrl": "./card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagFormFieldComponent",
            "id": "component-FlagFormFieldComponent-1c92c7e0a93ee1b22e91cf744fb994f3e6886dcb308d9edce0401af05b3a59bfd1af01255765069a8fb2f6cb6fb49d3025cf2916a2b36ec208521aad5d675d10",
            "file": "projects/flagarchive/src/components/form-field/form-field.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-form-field",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./form-field.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-form-field',\n  standalone: true,\n  styleUrl: './form-field.component.scss',\n  templateUrl: './form-field.component.html',\n})\nexport class FlagFormFieldComponent {}\n",
            "styleUrl": "./form-field.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagIconComponent",
            "id": "component-FlagIconComponent-f9d240ae82b5a2553b04241f959f24f35bf247372d562064483613dceac9661cfe581dfe95e67ab66560cfd5bc98fe296e8eb29878b5003c003f13c978695963",
            "file": "projects/flagarchive/src/components/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-icon",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconClass",
                    "defaultValue": "'material-symbols-rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'class'"
                        }
                    ],
                    "modifierKind": [
                        170,
                        124
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class",
                    "defaultValue": "'material-symbols-rounded'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-icon',\n  standalone: true,\n  styleUrl: './icon.component.scss',\n  templateUrl: './icon.component.html',\n})\nexport class FlagIconComponent {\n  @HostBinding('class')\n  protected iconClass = 'material-symbols-rounded';\n}\n",
            "styleUrl": "./icon.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagListItemComponent",
            "id": "component-FlagListItemComponent-8dea13573647bb52878c1c641f519d1358a117579198e770fa37db281503c064c540ad0e6795845e3ba9ee5e672e95fa7daed7c46869a8ba3dd2756a048dab9a",
            "file": "projects/flagarchive/src/components/list-item/list-item.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "interactive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "interactive",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "class.interactive",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  Component,\n  HostBinding,\n  input,\n} from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-list-item',\n  standalone: true,\n  styleUrl: './list-item.component.scss',\n  templateUrl: './list-item.component.html',\n})\nexport class FlagListItemComponent {\n  public active = input(false);\n  public disabled = input(false);\n  public interactive = input(true);\n\n  @HostBinding('class.active')\n  protected get activeClass(): boolean {\n    return this.active();\n  }\n\n  @HostBinding('class.disabled')\n  protected get disabledClass(): boolean {\n    return this.disabled();\n  }\n\n  @HostBinding('class.interactive')\n  protected get interactiveClass(): boolean {\n    return this.interactive();\n  }\n}\n",
            "styleUrl": "./list-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "activeClass": {
                    "name": "activeClass",
                    "getSignature": {
                        "name": "activeClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 21
                    }
                },
                "disabledClass": {
                    "name": "disabledClass",
                    "getSignature": {
                        "name": "disabledClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 26
                    }
                },
                "interactiveClass": {
                    "name": "interactiveClass",
                    "getSignature": {
                        "name": "interactiveClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 31
                    }
                }
            },
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagSkeletonComponent",
            "id": "component-FlagSkeletonComponent-80ea35dbfb99c71257d1443971e6c54b1e7648dddb72b4c42e3f36f9769ac6f4c621326c956f9905a4ade371fdc8a545d08d7605340a232240949ee48593b541",
            "file": "projects/flagarchive/src/components/skeleton/skeleton.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-skeleton",
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "loading",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "soft",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@Component({\n  selector: 'flag-skeleton',\n  standalone: true,\n  imports: [CommonModule],\n  template: '',\n  styleUrl: './skeleton.component.scss',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FlagSkeletonComponent {\n  @HostBinding('class.soft')\n  @Input()\n  public soft = false;\n\n  @HostBinding('class.loading')\n  @Input()\n  public loading = false;\n}\n",
            "styleUrl": "./skeleton.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": []
        },
        {
            "name": "FlagStepperComponent",
            "id": "component-FlagStepperComponent-237f56afc41610429058bab257280a7c8b2392b7af63fbd09ef3130a9467a211fedec8c2e4e44905e10afb6742841e4bbe0655aee9e812e31afbc186895038a9",
            "file": "projects/flagarchive/src/components/stepper/stepper.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-stepper",
            "styleUrls": [
                "./stepper.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./stepper.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "activeStep",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "cdr",
                    "defaultValue": "inject(ChangeDetectorRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "destroyRef",
                    "defaultValue": "inject(DestroyRef)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "stepperService",
                    "defaultValue": "inject(FlagStepperService)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "steps",
                    "defaultValue": "model.required<Step[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setActiveStep",
                    "args": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "index",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  DestroyRef,\n  OnInit,\n  inject,\n  model,\n} from '@angular/core';\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\n\nimport { Step } from './stepper.model';\nimport { FlagStepperService } from './stepper.service';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-stepper',\n  standalone: true,\n  styleUrls: ['./stepper.component.scss'],\n  templateUrl: './stepper.component.html',\n})\nexport class FlagStepperComponent implements OnInit {\n  private cdr = inject(ChangeDetectorRef);\n  private destroyRef = inject(DestroyRef);\n  private stepperService = inject(FlagStepperService);\n\n  public steps = model.required<Step[]>();  \n  public activeStep = model(0);\n\n  public ngOnInit(): void {\n    this.stepperService.steps$.pipe(\n      takeUntilDestroyed(this.destroyRef)\n    ).subscribe(steps => {\n      this.steps.set(steps);\n      this.cdr.detectChanges();\n    });\n  }\n\n  public setActiveStep(index: number): void {\n    this.activeStep.set(index);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  display: grid;\n  gap: var(--flag-space-xl);\n  position: relative;\n  width: max-content;\n}\n\nbutton {\n  padding-left: calc(var(--flag-size-sm) + var(--flag-space-xl));\n  z-index: 1;\n\n  &::before {\n    border: 0.125rem solid var(--flag-color-primary-500);\n    border-radius: 50%;\n    content: '';\n    height: var(--flag-size-sm);\n    left: var(--flag-space-sm);\n    position: absolute;\n    width: var(--flag-size-sm);\n    z-index: 2;\n  }\n\n  &[raised] {\n    &::before {\n      background-color: var(--flag-color-primary-500);\n      border-color: var(--flag-color-white);\n    }\n  }\n\n  &[disabled] {\n    &::before {\n      background-color: var(--flag-color-grey-300);\n      border-color: var(--flag-color-grey-500);\n    }\n  }\n}\n",
                    "styleUrl": "./stepper.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "@for (step of steps(); track i; let i = $index) {\n  <button\n    flagButton\n    [attr.ghost]=\"activeStep() !== i || undefined\"\n    [attr.raised]=\"activeStep() === i || undefined\"\n    [disabled]=\"step.disabled\"\n    (click)=\"setActiveStep(i)\"\n  >\n    {{ step.label }}\n  </button>\n}\n"
        },
        {
            "name": "FlagTabComponent",
            "id": "component-FlagTabComponent-e10598ac7df2375e8db280cb40b1f526d9eadb4f0880706af048ecbdd19671c5c46776439b499695de75520dac2e0e815d16922de0872bf45e3fc2572a012073",
            "file": "projects/flagarchive/src/components/tab/tab.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-tab",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "class.disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, HostBinding, input } from '@angular/core';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'flag-tab',\n  standalone: true,\n  styleUrl: './tab.component.scss',\n  templateUrl: './tab.component.html',\n})\nexport class FlagTabComponent {\n  public disabled = input(false);\n\n  @HostBinding('class.disabled')\n  public get disabledClass(): boolean {\n    return this.disabled();\n  }\n}\n",
            "styleUrl": "./tab.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "disabledClass": {
                    "name": "disabledClass",
                    "getSignature": {
                        "name": "disabledClass",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 14
                    }
                }
            },
            "templateData": "<ng-content />\n"
        },
        {
            "name": "FlagTabGroupComponent",
            "id": "component-FlagTabGroupComponent-33cee139beef23114d78c98fb943e7af794d4b65898d2cc15f892acf5d74ef335c64e280f82653781a7c6414e5c44a0de652ba3af32d54127cbe8c3fae4cea7a",
            "file": "projects/flagarchive/src/components/tab-group/tab-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-tab-group",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./tab-group.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "active",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        125
                    ],
                    "required": false
                },
                {
                    "name": "linePosition",
                    "defaultValue": "computed(() => `${100 / this.tabs().length * this.active()}%`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "lineWidth",
                    "defaultValue": "computed(() => `${100 / this.tabs().length}%`)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "tabs",
                    "defaultValue": "input.required<Tab[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "setActive",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "FlagTabComponent",
                    "type": "component"
                },
                {
                    "name": "NgStyle"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgStyle } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  computed,\n  input,\n  model,\n} from '@angular/core';\n\nimport { FlagTabComponent, Tab } from '../tab';\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [FlagTabComponent, NgStyle],\n  selector: 'flag-tab-group',\n  standalone: true,\n  templateUrl: './tab-group.component.html',\n  styleUrl: './tab-group.component.scss',\n})\nexport class FlagTabGroupComponent {\n  public tabs = input.required<Tab[]>();\n\n  public active = model(0);\n\n  public linePosition = computed(() => `${100 / this.tabs().length * this.active()}%`);\n  public lineWidth = computed(() => `${100 / this.tabs().length}%`);\n\n  public setActive(id: number): void {\n    this.active.set(id);\n  }\n}\n",
            "styleUrl": "./tab-group.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "@for (tab of tabs(); track $index) {\n  <flag-tab [disabled]=\"tab.disabled\" (click)=\"setActive(tab.id)\">\n    {{ tab.label }}\n  </flag-tab>\n}\n<div class=\"line\" [ngStyle]=\"{ left: linePosition(), width: lineWidth() }\"></div>\n"
        },
        {
            "name": "FlagYearPickerComponent",
            "id": "component-FlagYearPickerComponent-132683de4bea5cae31a4b51130f09d23bab2fb2424a567cfc89768d7523a6fccf09e5eeac8fe788f097b55bd08c49e8d2c43f908ad3b50cfcdd2cbbc93197feb",
            "file": "projects/flagarchive/src/components/year-picker/year-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "flag-year-picker",
            "styleUrls": [
                "./year-picker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./year-picker.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "max",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "min",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "rangeSize",
                    "defaultValue": "9",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "selected",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "selectedChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "activeRange",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[number, number]",
                    "optional": false,
                    "description": "",
                    "line": 42,
                    "modifierKind": [
                        125
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "previous",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ]
                },
                {
                    "name": "setYear",
                    "args": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        125
                    ],
                    "jsdoctags": [
                        {
                            "name": "year",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "FlagIconComponent",
                    "type": "component"
                },
                {
                    "name": "RangePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnInit,\n  Output\n} from '@angular/core';\n\nimport { RangePipe } from '../../pipes';\nimport { FlagIconComponent } from '../icon';\n\n@Component({\n  selector: 'flag-year-picker',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FlagIconComponent,\n    RangePipe\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  templateUrl: './year-picker.component.html',\n  styleUrls: ['./year-picker.component.scss']\n})\nexport class FlagYearPickerComponent implements OnInit {\n  @Input()\n  public min = 0;\n\n  @Input()\n  public max = 0;\n\n  @Input()\n  public rangeSize = 9;\n\n  @Input()\n  public selected = 0;\n\n  @Output()\n  public selectedChange = new EventEmitter<number>();\n\n  public activeRange!: [number, number];\n\n  public ngOnInit(): void {\n    const difference = this.max - this.selected;\n    const multiplier = Math.floor(difference / this.rangeSize);\n    const range = this.rangeSize * multiplier;\n    const minValue = this.max + 1 - this.rangeSize - range;\n    this.activeRange = [minValue < this.min ? this.min : minValue, this.max - range];\n  }\n\n  public previous(): void {\n    const minValue = this.activeRange[0] - this.rangeSize;\n    this.activeRange = [\n      minValue < this.min ? this.min : minValue, this.activeRange[0] - 1\n    ];\n  }\n\n  public next(): void {\n    const maxValue = this.activeRange[1] + this.rangeSize;\n    this.activeRange = [\n      this.activeRange[1] + 1, maxValue > this.max ? this.max : maxValue\n    ];\n  }\n\n  public setYear(year: number): void {\n    this.selected = year;\n    this.selectedChange.emit(this.selected);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\n  background-color: var(--flag-color-grey-100);\n  border-radius: var(--flag-radius-sm);\n  box-shadow: var(--flag-elevation-xs);\n  box-sizing: border-box;\n  display: grid;\n  gap: var(--flag-space-sm);\n  grid-template-rows: auto 1fr auto;\n  width: max-content;\n  padding: var(--flag-space-sm);\n}\n\n.years {\n  display: grid;\n  gap: var(--flag-space-sm);\n  grid-template-columns: repeat(3, var(--flag-size-3xl));\n}\n",
                    "styleUrl": "./year-picker.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<button flagButton [disabled]=\"min === activeRange[0]\" (click)=\"previous()\">\n  <flag-icon>keyboard_arrow_up</flag-icon>\n</button>\n<div class=\"years\">\n  @for (year of activeRange | range; track $index) {\n    <button flagButton [attr.raised]=\"year === selected || undefined\" (click)=\"setYear(year)\">\n      {{ year }}\n    </button>\n  }\n</div>\n<button flagButton [disabled]=\"max === activeRange[1]\" (click)=\"next()\">\n  <flag-icon>keyboard_arrow_down</flag-icon>\n</button>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "Active",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    active: true\n  }\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "BreadcrumbArgs",
                "defaultValue": "{\n  items: [\n    { title: 'Home', link: '/' },\n    { title: 'Category', link: '/category' }\n  ]\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "FormFieldArgs",
                "defaultValue": "{\n  inputType: 'text',\n  label: 'Form Field'\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ListItemArgs",
                "defaultValue": "{\n  active: false,\n  disabled: false,\n  interactive: true,\n  label: 'List Item',\n  prefix: '',\n  suffix: ''\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SkeletonArgs",
                "defaultValue": "{\n  loading: true,\n  soft: false\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StepperArgs",
                "defaultValue": "{\n  activeStep: 0,\n  steps: [\n    { disabled: false, label: 'Step 1' },\n    { disabled: false, label: 'Step 2' },\n    { disabled: true, label: 'Step 3' },\n  ]\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "TabGroupArgs",
                "defaultValue": "{\n  active: 0,\n  tabs: [\n    { id: 0, disabled: false, label: 'Tab 1', name: 'Tab 1' },\n    { id: 1, disabled: false, label: 'Tab 2', name: 'Tab 2' },\n    { id: 2, disabled: true, label: 'Tab 3', name: 'Tab 3' },\n    { id: 3, disabled: false, label: 'Tab 4', name: 'Tab 4' },\n  ],\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "YearPickerArgs",
                "defaultValue": "{\n  min: 1800,\n  max: 2024,\n  rangeSize: 9,\n  selected: 2024,\n}"
            },
            {
                "name": "args",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryArgs",
                "defaultValue": "{\n  disabled: false,\n  ghost: false,\n  icon: 'keyboard_arrow_left',\n  raised: true,\n  rounded: false,\n  secondary: false,\n  text: 'Button',\n}"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args: {} }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{ args }"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    disabled: true\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DropdownArgs>",
                "defaultValue": "{\n  title: 'Components/Dropdown',\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        FlagButtonDirective,\n        FlagCardComponent,\n        FlagDropdownDirective,\n        FlagIconComponent,\n        FlagListItemComponent,\n      ],\n    })\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <button flagButton [flagDropdownTrigger]=\"menu\">\n        <flag-icon>menu</flag-icon>\n      </button>\n\n      <ng-template #menu>\n        <flag-card>\n          <flag-list-item>Log in</flag-list-item>\n          <flag-list-item>Sign up</flag-list-item>\n        </flag-card>\n      </ng-template>\n    `\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BreadcrumbArgs>",
                "defaultValue": "{\n  title: 'Components/Breadcrumb',\n  component: FlagBreadcrumbComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagBreadcrumbComponent]\n    })\n  ],\n  render: args => ({\n    props: args\n  }),\n  argTypes: {}\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FormFieldArgs>",
                "defaultValue": "{\n  title: 'Components/Form Field (beta)',\n  component: FlagFormFieldComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagFormFieldComponent]\n    })\n  ],\n  render: ({ inputType, label, ...args }) => ({\n    props: args,\n    template: `\n      <flag-form-field>\n        ${label ? `<label flagLabel>${label}</label>` : ''}\n        ${inputType === 'text' ? '<input flagInput />' : ''}\n      </flag-form-field>\n    `\n  }),\n  argTypes: {\n    inputType: {\n      control: 'select',\n      options: ['text']\n    },\n    label: {\n      control: 'text'\n    },\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ListItemArgs>",
                "defaultValue": "{\n  title: 'Components/List Item',\n  component: FlagListItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagListItemComponent],\n    })\n  ],\n  render: ({label, prefix, suffix, ...args}) => ({\n    props: args,\n    template: `\n      <flag-list-item [active]=\"active\" [disabled]=\"disabled\" [interactive]=\"interactive\">\n        ${prefix ? `\n          <flag-icon style=\"font-size: var(--flag-size-sm);\">${prefix}</flag-icon>\n        ` : ''}\n        ${label}\n        ${suffix ? `\n          <flag-icon style=\"font-size: var(--flag-size-sm);\">${suffix}</flag-icon>\n        ` : ''}\n      </flag-list-item>\n    `\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Chip'\n    },\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SkeletonArgs>",
                "defaultValue": "{\n  title: 'Components/Skeleton',\n  component: FlagSkeletonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagSkeletonComponent]\n    })\n  ],\n  render: args => ({\n    props: args,\n    template: `\n      <flag-skeleton\n        style=\"height: 8rem; width: 12rem\"\n        [loading]=\"loading\"\n        [soft]=\"soft\"\n      />\n    `\n  }),\n  argTypes: {}\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StepperArgs>",
                "defaultValue": "{\n  title: 'Components/Stepper (beta)',\n  component: FlagStepperComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagStepperComponent]\n    })\n  ],\n  render: args => ({\n    props: args\n  }),\n  argTypes: {}\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabGroupArgs>",
                "defaultValue": "{\n  title: 'Components/Tab Group',\n  component: FlagTabGroupComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagTabGroupComponent, FlagIconComponent],\n    })\n  ],\n  render: args => ({\n    props: args,\n  }),\n  argTypes: {}\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<YearPickerArgs>",
                "defaultValue": "{\n  title: 'Components/Year Picker (beta)',\n  component: FlagYearPickerComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"max-width: 20rem\">${story}</div>`),\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagYearPickerComponent],\n    })\n  ],\n  render: args => ({\n    props: args,\n  }),\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StoryArgs>",
                "defaultValue": "{\n  tags: ['autodocs'],\n  title: 'Core/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [FlagButtonDirective, FlagIconComponent],\n    }),\n  ],\n  render: (props) => ({\n    props,\n    template: `\n      <button\n        flagButton\n        type=\"button\"\n        [attr.ghost]=${props.ghost || undefined}\n        [attr.raised]=${props.raised || undefined}\n        [attr.rounded]=${props.rounded || undefined}\n        [attr.secondary]=${props.secondary || undefined}\n        [disabled]=${props.disabled || undefined}\n      >\n        ${props.icon && `<flag-icon>${props.icon}</flag-icon>`}\n        ${props.text}\n      </button>\n    `,\n  }),\n}"
            },
            {
                "name": "NotInteractive",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    interactive: false\n  }\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\n  parameters: {\n    backgrounds: {\n      default: 'light',\n      values: [\n        {\n          name: 'light',\n          value: 'var(--flag-color-grey-200)'\n        },\n        {\n          name: 'primary',\n          value: 'var(--flag-color-primary-500)'\n        },\n        {\n          name: 'dark',\n          value: 'var(--flag-color-grey-700)'\n        }\n      ]\n    },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args,\n}"
            },
            {
                "name": "Soft",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { ...args, soft: true }\n}"
            },
            {
                "name": "Static",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: { ...args, loading: false }\n}"
            },
            {
                "name": "WithAffixes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    ...args,\n    prefix: 'star',\n    suffix: 'keyboard_arrow_right'\n  }\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "BreadcrumbArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "DropdownArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 159
            },
            {
                "name": "FormFieldArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 193
            },
            {
                "name": "ListItemArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "SkeletonArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "FlagSkeletonComponent",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StepperArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DropdownArgs>",
                "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BreadcrumbArgs>",
                "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FormFieldArgs>",
                "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ListItemArgs>",
                "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SkeletonArgs>",
                "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StepperArgs>",
                "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabGroupArgs>",
                "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<YearPickerArgs>",
                "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StoryArgs>",
                "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "StoryArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "TabGroupArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "YearPickerArgs",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "Pick<FlagYearPickerComponent | \"min\" | \"max\" | \"rangeSize\" | \"selected\">",
                "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/flagarchive/src/components/list-item/list-item.stories.ts": [
                {
                    "name": "Active",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    active: true\n  }\n}"
                },
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ListItemArgs",
                    "defaultValue": "{\n  active: false,\n  disabled: false,\n  interactive: true,\n  label: 'List Item',\n  prefix: '',\n  suffix: ''\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    disabled: true\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ListItemArgs>",
                    "defaultValue": "{\n  title: 'Components/List Item',\n  component: FlagListItemComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagListItemComponent],\n    })\n  ],\n  render: ({label, prefix, suffix, ...args}) => ({\n    props: args,\n    template: `\n      <flag-list-item [active]=\"active\" [disabled]=\"disabled\" [interactive]=\"interactive\">\n        ${prefix ? `\n          <flag-icon style=\"font-size: var(--flag-size-sm);\">${prefix}</flag-icon>\n        ` : ''}\n        ${label}\n        ${suffix ? `\n          <flag-icon style=\"font-size: var(--flag-size-sm);\">${suffix}</flag-icon>\n        ` : ''}\n      </flag-list-item>\n    `\n  }),\n  argTypes: {\n    label: {\n      control: 'text',\n      defaultValue: 'Chip'\n    },\n  }\n}"
                },
                {
                    "name": "NotInteractive",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    interactive: false\n  }\n}"
                },
                {
                    "name": "WithAffixes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    ...args,\n    prefix: 'star',\n    suffix: 'keyboard_arrow_right'\n  }\n}"
                }
            ],
            "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "BreadcrumbArgs",
                    "defaultValue": "{\n  items: [\n    { title: 'Home', link: '/' },\n    { title: 'Category', link: '/category' }\n  ]\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BreadcrumbArgs>",
                    "defaultValue": "{\n  title: 'Components/Breadcrumb',\n  component: FlagBreadcrumbComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagBreadcrumbComponent]\n    })\n  ],\n  render: args => ({\n    props: args\n  }),\n  argTypes: {}\n}"
                }
            ],
            "projects/flagarchive/src/components/form-field/form-field.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormFieldArgs",
                    "defaultValue": "{\n  inputType: 'text',\n  label: 'Form Field'\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FormFieldArgs>",
                    "defaultValue": "{\n  title: 'Components/Form Field (beta)',\n  component: FlagFormFieldComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagFormFieldComponent]\n    })\n  ],\n  render: ({ inputType, label, ...args }) => ({\n    props: args,\n    template: `\n      <flag-form-field>\n        ${label ? `<label flagLabel>${label}</label>` : ''}\n        ${inputType === 'text' ? '<input flagInput />' : ''}\n      </flag-form-field>\n    `\n  }),\n  argTypes: {\n    inputType: {\n      control: 'select',\n      options: ['text']\n    },\n    label: {\n      control: 'text'\n    },\n  }\n}"
                }
            ],
            "projects/flagarchive/src/components/skeleton/skeleton.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SkeletonArgs",
                    "defaultValue": "{\n  loading: true,\n  soft: false\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SkeletonArgs>",
                    "defaultValue": "{\n  title: 'Components/Skeleton',\n  component: FlagSkeletonComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagSkeletonComponent]\n    })\n  ],\n  render: args => ({\n    props: args,\n    template: `\n      <flag-skeleton\n        style=\"height: 8rem; width: 12rem\"\n        [loading]=\"loading\"\n        [soft]=\"soft\"\n      />\n    `\n  }),\n  argTypes: {}\n}"
                },
                {
                    "name": "Soft",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { ...args, soft: true }\n}"
                },
                {
                    "name": "Static",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: { ...args, loading: false }\n}"
                }
            ],
            "projects/flagarchive/src/components/stepper/stepper.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StepperArgs",
                    "defaultValue": "{\n  activeStep: 0,\n  steps: [\n    { disabled: false, label: 'Step 1' },\n    { disabled: false, label: 'Step 2' },\n    { disabled: true, label: 'Step 3' },\n  ]\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StepperArgs>",
                    "defaultValue": "{\n  title: 'Components/Stepper (beta)',\n  component: FlagStepperComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagStepperComponent]\n    })\n  ],\n  render: args => ({\n    props: args\n  }),\n  argTypes: {}\n}"
                }
            ],
            "projects/flagarchive/src/components/tab-group/tab-group.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TabGroupArgs",
                    "defaultValue": "{\n  active: 0,\n  tabs: [\n    { id: 0, disabled: false, label: 'Tab 1', name: 'Tab 1' },\n    { id: 1, disabled: false, label: 'Tab 2', name: 'Tab 2' },\n    { id: 2, disabled: true, label: 'Tab 3', name: 'Tab 3' },\n    { id: 3, disabled: false, label: 'Tab 4', name: 'Tab 4' },\n  ],\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabGroupArgs>",
                    "defaultValue": "{\n  title: 'Components/Tab Group',\n  component: FlagTabGroupComponent,\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [FlagTabGroupComponent, FlagIconComponent],\n    })\n  ],\n  render: args => ({\n    props: args,\n  }),\n  argTypes: {}\n}"
                }
            ],
            "projects/flagarchive/src/components/year-picker/year-picker.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "YearPickerArgs",
                    "defaultValue": "{\n  min: 1800,\n  max: 2024,\n  rangeSize: 9,\n  selected: 2024,\n}"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<YearPickerArgs>",
                    "defaultValue": "{\n  title: 'Components/Year Picker (beta)',\n  component: FlagYearPickerComponent,\n  tags: ['autodocs'],\n  decorators: [\n    componentWrapperDecorator((story) => `<div style=\"max-width: 20rem\">${story}</div>`),\n    moduleMetadata({\n      imports: [FlagIconComponent, FlagYearPickerComponent],\n    })\n  ],\n  render: args => ({\n    props: args,\n  }),\n}"
                }
            ],
            "projects/flagarchive/src/core/styles/button.stories.ts": [
                {
                    "name": "args",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryArgs",
                    "defaultValue": "{\n  disabled: false,\n  ghost: false,\n  icon: 'keyboard_arrow_left',\n  raised: true,\n  rounded: false,\n  secondary: false,\n  text: 'Button',\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StoryArgs>",
                    "defaultValue": "{\n  tags: ['autodocs'],\n  title: 'Core/Button',\n  decorators: [\n    moduleMetadata({\n      imports: [FlagButtonDirective, FlagIconComponent],\n    }),\n  ],\n  render: (props) => ({\n    props,\n    template: `\n      <button\n        flagButton\n        type=\"button\"\n        [attr.ghost]=${props.ghost || undefined}\n        [attr.raised]=${props.raised || undefined}\n        [attr.rounded]=${props.rounded || undefined}\n        [attr.secondary]=${props.secondary || undefined}\n        [disabled]=${props.disabled || undefined}\n      >\n        ${props.icon && `<flag-icon>${props.icon}</flag-icon>`}\n        ${props.text}\n      </button>\n    `,\n  }),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args,\n}"
                }
            ],
            "projects/flagarchive/src/directives/dropdown.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{ args: {} }"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DropdownArgs>",
                    "defaultValue": "{\n  title: 'Components/Dropdown',\n  tags: ['autodocs'],\n  decorators: [\n    moduleMetadata({\n      imports: [\n        FlagButtonDirective,\n        FlagCardComponent,\n        FlagDropdownDirective,\n        FlagIconComponent,\n        FlagListItemComponent,\n      ],\n    })\n  ],\n  render: (args) => ({\n    props: args,\n    template: `\n      <button flagButton [flagDropdownTrigger]=\"menu\">\n        <flag-icon>menu</flag-icon>\n      </button>\n\n      <ng-template #menu>\n        <flag-card>\n          <flag-list-item>Log in</flag-list-item>\n          <flag-list-item>Sign up</flag-list-item>\n        </flag-card>\n      </ng-template>\n    `\n  }),\n}"
                }
            ],
            "projects/flagarchive/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/flagarchive/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\n  parameters: {\n    backgrounds: {\n      default: 'light',\n      values: [\n        {\n          name: 'light',\n          value: 'var(--flag-color-grey-200)'\n        },\n        {\n          name: 'primary',\n          value: 'var(--flag-color-primary-500)'\n        },\n        {\n          name: 'dark',\n          value: 'var(--flag-color-grey-700)'\n        }\n      ]\n    },\n    controls: {\n      matchers: {\n        color: /(background|color)$/i,\n        date: /Date$/,\n      },\n    },\n  },\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts": [
                {
                    "name": "BreadcrumbArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BreadcrumbArgs>",
                    "file": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/directives/dropdown.stories.ts": [
                {
                    "name": "DropdownArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 159
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DropdownArgs>",
                    "file": "projects/flagarchive/src/directives/dropdown.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/components/form-field/form-field.stories.ts": [
                {
                    "name": "FormFieldArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 193
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FormFieldArgs>",
                    "file": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/components/list-item/list-item.stories.ts": [
                {
                    "name": "ListItemArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ListItemArgs>",
                    "file": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/components/skeleton/skeleton.stories.ts": [
                {
                    "name": "SkeletonArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "FlagSkeletonComponent",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SkeletonArgs>",
                    "file": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/components/stepper/stepper.stories.ts": [
                {
                    "name": "StepperArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StepperArgs>",
                    "file": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/components/tab-group/tab-group.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabGroupArgs>",
                    "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "TabGroupArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "projects/flagarchive/src/components/year-picker/year-picker.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<YearPickerArgs>",
                    "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "YearPickerArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "Pick<FlagYearPickerComponent | \"min\" | \"max\" | \"rangeSize\" | \"selected\">",
                    "file": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "projects/flagarchive/src/core/styles/button.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StoryArgs>",
                    "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                },
                {
                    "name": "StoryArgs",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "projects/flagarchive/src/core/styles/button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/flagarchive/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagBreadcrumbComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BreadcrumbItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/breadcrumb/breadcrumb.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/card/card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/form-field/form-field.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagFormFieldComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/form-field/form-field.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagIconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Active",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NotInteractive",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/list-item/list-item.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithAffixes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagSkeletonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Soft",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/skeleton/skeleton.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Static",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagStepperComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Step",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FlagStepperService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/stepper/stepper.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab-group/tab-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagTabGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab-group/tab-group.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab/tab.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagTabComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/tab/tab.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tab",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/year-picker/year-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FlagYearPickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/components/year-picker/year-picker.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/core/styles/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "args",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/core/styles/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/core/styles/button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/directives/button.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FlagButtonDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/directives/dropdown.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "FlagDropdownDirective",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/directives/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/directives/dropdown.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/flagarchive/src/pipes/range.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "RangePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}